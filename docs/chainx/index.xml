<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ChainX Docs – ChainX</title><link>https://chainx-org.github.io/documentation/docs/chainx/</link><description>Recent content in ChainX on ChainX Docs</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://chainx-org.github.io/documentation/docs/chainx/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Overview</title><link>https://chainx-org.github.io/documentation/docs/chainx/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chainx-org.github.io/documentation/docs/chainx/overview/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>Overview&lt;/p>
&lt;/div>
&lt;p>The Overview is where your users find out about your project. Depending on the size of your docset, you can have a separate overview page (like this one) or put your overview contents in the Documentation landing page (like in the Docsy User Guide).&lt;/p>
&lt;p>Try answering these questions for your user in this page:&lt;/p>
&lt;h2 id="what-is-it">What is it?&lt;/h2>
&lt;p>Introduce your project, including what it does or lets you do, why you would use it, and its primary goal (and how it achieves it). This should be similar to your README description, though you can go into a little more detail here if you want.&lt;/p>
&lt;h2 id="why-do-i-want-it">Why do I want it?&lt;/h2>
&lt;p>Help your user know if your project will help them. Useful information can include:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>What is it good for?&lt;/strong>: What types of problems does your project solve? What are the benefits of using it?&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>What is it not good for?&lt;/strong>: For example, point out situations that might intuitively seem suited for your project, but aren&amp;rsquo;t for some reason. Also mention known limitations, scaling issues, or anything else that might let your users know if the project is not for them.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>What is it &lt;em>not yet&lt;/em> good for?&lt;/strong>: Highlight any useful features that are coming soon.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="where-should-i-go-next">Where should I go next?&lt;/h2>
&lt;p>Give your users next steps from the Overview. For example:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="../../getting-started/">Getting Started&lt;/a>: Get started with $project&lt;/li>
&lt;li>&lt;a href="../../examples/">Examples&lt;/a>: Check out some example code!&lt;/li>
&lt;/ul></description></item><item><title>Docs: User guide</title><link>https://chainx-org.github.io/documentation/docs/chainx/users/</link><pubDate>Tue, 19 Apr 2022 00:00:00 +0000</pubDate><guid>https://chainx-org.github.io/documentation/docs/chainx/users/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>User Guide&lt;/p>
&lt;/div></description></item><item><title>Docs: Validator guide</title><link>https://chainx-org.github.io/documentation/docs/chainx/validators/</link><pubDate>Wed, 20 Apr 2022 00:00:00 +0000</pubDate><guid>https://chainx-org.github.io/documentation/docs/chainx/validators/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>Validation Node Guide&lt;/p>
&lt;/div>
&lt;h2 id="1-preparations">1. Preparations&lt;/h2>
&lt;h3 id="11-a-vps">1.1 A VPS&lt;/h3>
&lt;p>The easiest way is to use a cloud hosting, you are free to choose any hosting provider.&lt;/p>
&lt;h4 id="111-testnet-hardware-configuration">1.1.1 Testnet hardware configuration&lt;/h4>
&lt;ul>
&lt;li>CPU 2 cores, memory 2G, bandwidth 1M, operating system Ubuntu 20.04+.&lt;/li>
&lt;/ul>
&lt;h4 id="112-mainnet-hardware-configuration">1.1.2 Mainnet hardware configuration&lt;/h4>
&lt;p>Taking Alibaba Cloud as an example, the recommended configuration for the ChainX mainnet is no less than: CPU 4 cores, memory 4G, bandwidth 10M, disk use SSD 300G+, operating system 20.04+.&lt;/p>
&lt;h3 id="12-install-the-chainx-program">1.2 Install the &lt;code>chainx&lt;/code> program&lt;/h3>
&lt;h4 id="121-compiling-from-source">1.2.1 Compiling from source&lt;/h4>
&lt;p>Install related dependencies, take ubuntu 20.04 as an example&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">sudo apt update -y
sudo apt install --no-install-recommends -y &lt;span style="color:#04d;background-color:#fff0f0">\
&lt;/span>&lt;span style="color:#04d;background-color:#fff0f0">&lt;/span> git curl ca-certificates &lt;span style="color:#04d;background-color:#fff0f0">\
&lt;/span>&lt;span style="color:#04d;background-color:#fff0f0">&lt;/span> gcc g++ cmake clang
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We assume you have Rust nightly and &lt;code>wasm32-unknown-unknown&lt;/code> installed:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ rustup install nightly-2021-11-07
$ rustup override &lt;span style="color:#038">set&lt;/span> nightly-2021-11-07
$ rustup target add wasm32-unknown-unknown --toolchain nightly-2021-11-07
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Next, you need to follow the steps below to complete the compilation:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ git clone https://github.com/chainx-org/ChainX
$ &lt;span style="color:#038">cd&lt;/span> ChainX
&lt;span style="color:#888"># switch to the latest tag&lt;/span>
$ git checkout &lt;span style="color:#080;font-weight:bold">$(&lt;/span>git describe --tags &lt;span style="color:#080;font-weight:bold">$(&lt;/span>git rev-list --tags --max-count=1&lt;span style="color:#080;font-weight:bold">))&lt;/span>
&lt;span style="color:#888"># Compile the binaries for the Release version&lt;/span>
$ cargo build --release
&lt;/code>&lt;/pre>&lt;/div>&lt;p>After compilation, the &lt;code>chainx&lt;/code> program will be in the &lt;code>target/release/&lt;/code> directory.&lt;/p>
&lt;h4 id="122-download-the-compiled-binary-directly">1.2.2 Download the compiled binary directly&lt;/h4>
&lt;p>Download the provided compiled binaries from the &lt;a href="https://github.com/chainx-org/ChainX/releases">GitHub release(https://github.com/chainx-org/ChainX/releases)&lt;/a> page.&lt;/p>
&lt;h3 id="13-sync-to-the-latest-state-of-the-chain">1.3 Sync to the latest state of the chain&lt;/h3>
&lt;blockquote>
&lt;h4 id="how-to-sync-blocks-from-genesisblock-0">&lt;code>How to sync blocks from genesis(block #0)&lt;/code>&lt;/h4>
&lt;ul>
&lt;li>(0) You should know &lt;a href="https://github.com/chainx-org/ChainX/issues/609">Debug: panicked at &amp;lsquo;Storage root must match that calculated ' #609&lt;/a>
&lt;strong>if you use ChainX v4.x.x directly sync blocks will be stuck at #881910&lt;/strong> or other block.&lt;/li>
&lt;li>(1) Compile &lt;a href="https://github.com/chainx-org/ChainX/tree/v3.0.0">ChainX v3.0.0&lt;/a> by &lt;code>nightly-2020-09-30&lt;/code> or Download &lt;a href="https://github.com/chainx-org/ChainX/releases/download/v3.0.0/chainx-v3.0.0-ubuntu20.04-x86_64-unknown-linux-gnu-1">chainx-v3.0.0-ubuntu20.04-x86_64-unknown-linux-gnu-1&lt;/a>
the ChainX v3.0.0 seed nodes are bad, so you should use new mainnet bootnodes with &lt;code>--bootnodes&lt;/code>&lt;/li>
&lt;/ul>
&lt;pre>&lt;code>&amp;quot;/ip4/52.77.243.26/tcp/23555/ws/p2p/12D3KooWQ6GGfmvmmmsbKRmZqMA3A8rxaHz25HvA7JNBbcZhLXtk&amp;quot;
&amp;quot;/ip4/120.26.57.227/tcp/36789/ws/p2p/12D3KooWEAX2BcQCZP79MuxQpqLQUop7P3tZY97eNxxUgc4ZTu3k&amp;quot;
&amp;quot;/ip4/47.114.74.52/tcp/36789/ws/p2p/12D3KooWJPMUkGytfAMt3AMqm4AFn4VToXjbWZoC4Z2NxXNXvTwb&amp;quot;
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>(2) Until &lt;strong>#3038400&lt;/strong>, please use ChainX v3.0.0 to synchronize with &lt;code>NativeElseWasm (default mode)&lt;/code>&lt;/li>
&lt;li>(3) For blocks after &lt;strong>#3038400&lt;/strong>, complete (2) first, and then replace ChainX v3.0.0 with ChainX v4.x.x to complete the db migration (note that the migration process is irreversible, it is recommended to back up the data first)&lt;/li>
&lt;li>(4) ChainX v4.x.x continues to synchronize blocks&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>Start syncing the blockchain with the following command:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ ./chainx-v3.0.0 --chain=mainnet --pruning=archive &lt;span style="color:#04d;background-color:#fff0f0">\
&lt;/span>&lt;span style="color:#04d;background-color:#fff0f0">&lt;/span> --bootnodes=&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;/ip4/52.77.243.26/tcp/23555/ws/p2p/12D3KooWQ6GGfmvmmmsbKRmZqMA3A8rxaHz25HvA7JNBbcZhLXtk&amp;#34;&lt;/span> &lt;span style="color:#04d;background-color:#fff0f0">\
&lt;/span>&lt;span style="color:#04d;background-color:#fff0f0">&lt;/span> --bootnodes=&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;/ip4/120.26.57.227/tcp/36789/ws/p2p/12D3KooWEAX2BcQCZP79MuxQpqLQUop7P3tZY97eNxxUgc4ZTu3k&amp;#34;&lt;/span>
&lt;span style="color:#888"># until block #3038400&lt;/span>
$ ./chainx-v4.2.0 --chain=mainnet --pruning=archive
&lt;/code>&lt;/pre>&lt;/div>&lt;p>After the synchronization is complete, restart the node in validator mode:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ ./chainx --chain=mainnet --validator
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Or start in validator mode directly to sync:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#888"># When using --validator, the archive mode will be enabled by default, i.e. --pruning=archive&lt;/span>
$ ./chainx --chain=mainnet --validator
&lt;/code>&lt;/pre>&lt;/div>&lt;p>However, note that you must wait for the synchronization to complete and set the Session Keys before letting the node participate in the election.&lt;/p>
&lt;blockquote>
&lt;p>If there is a synchronization exception, please ensure that the system time and network time are consistent, and then perform synchronization after deleting the database.&lt;/p>
&lt;/blockquote>
&lt;h4 id="131-configuration-file">1.3.1 Configuration file&lt;/h4>
&lt;p>For validator nodes, we recommend the following configuration:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">{
&lt;span style="color:#b06;font-weight:bold">&amp;#34;log-dir&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;./log&amp;#34;&lt;/span>, &lt;span style="color:#a61717;background-color:#e3d2d2">//&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">log&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">directory&lt;/span>
&lt;span style="color:#b06;font-weight:bold">&amp;#34;enable-console-log&amp;#34;&lt;/span>: &lt;span style="color:#080;font-weight:bold">false&lt;/span>, &lt;span style="color:#a61717;background-color:#e3d2d2">//&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">also&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">output&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">log&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">to&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">console&lt;/span>
&lt;span style="color:#b06;font-weight:bold">&amp;#34;no-mdns&amp;#34;&lt;/span>: &lt;span style="color:#080;font-weight:bold">true&lt;/span>,
&lt;span style="color:#b06;font-weight:bold">&amp;#34;validator&amp;#34;&lt;/span>: &lt;span style="color:#080;font-weight:bold">true&lt;/span>, &lt;span style="color:#a61717;background-color:#e3d2d2">//&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">validator&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">node&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">must&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">be&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">true,&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">default&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">is&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">false&lt;/span>
&lt;span style="color:#b06;font-weight:bold">&amp;#34;unsafe-ws-external&amp;#34;&lt;/span>: &lt;span style="color:#080;font-weight:bold">true&lt;/span>, &lt;span style="color:#a61717;background-color:#e3d2d2">//&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">The&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">validator&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">node&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">recommends&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">closing&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">the&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">external&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">ws&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">port&lt;/span>
&lt;span style="color:#b06;font-weight:bold">&amp;#34;unsafe-rpc-external&amp;#34;&lt;/span>: &lt;span style="color:#080;font-weight:bold">true&lt;/span>, &lt;span style="color:#a61717;background-color:#e3d2d2">//&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">The&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">validator&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">node&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">recommends&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">closing&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">the&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">external&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">rpc&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">port&lt;/span>
&lt;span style="color:#b06;font-weight:bold">&amp;#34;rpc-methods&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;unsafe&amp;#34;&lt;/span>,
&lt;span style="color:#b06;font-weight:bold">&amp;#34;log&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;info,runtime=info&amp;#34;&lt;/span>,
&lt;span style="color:#b06;font-weight:bold">&amp;#34;port&amp;#34;&lt;/span>: &lt;span style="color:#00d;font-weight:bold">20222&lt;/span>, &lt;span style="color:#a61717;background-color:#e3d2d2">//&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">specify&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">the&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">tcp&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">port&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">of&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">the&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">p2p&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">protocol&lt;/span>
&lt;span style="color:#b06;font-weight:bold">&amp;#34;ws-port&amp;#34;&lt;/span>: &lt;span style="color:#00d;font-weight:bold">8087&lt;/span>, &lt;span style="color:#a61717;background-color:#e3d2d2">//&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">Specify&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">the&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">RPC&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">service&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">port&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">of&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">websocket&lt;/span>
&lt;span style="color:#b06;font-weight:bold">&amp;#34;rpc-port&amp;#34;&lt;/span>: &lt;span style="color:#00d;font-weight:bold">8086&lt;/span>, &lt;span style="color:#a61717;background-color:#e3d2d2">//&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">Specify&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">the&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">RPC&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">service&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">port&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">of&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">http&lt;/span>
&lt;span style="color:#b06;font-weight:bold">&amp;#34;pruning&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;archive&amp;#34;&lt;/span>, &lt;span style="color:#a61717;background-color:#e3d2d2">//&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">It&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">is&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">strongly&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">recommended&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">to&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">add&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">this&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">configuration&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">to&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">start&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">in&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">archive&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">mode&lt;/span>
&lt;span style="color:#b06;font-weight:bold">&amp;#34;execution&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;NativeElseWasm&amp;#34;&lt;/span>,
&lt;span style="color:#b06;font-weight:bold">&amp;#34;db-cache&amp;#34;&lt;/span>: &lt;span style="color:#00d;font-weight:bold">2048&lt;/span>, &lt;span style="color:#a61717;background-color:#e3d2d2">//&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">Set&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">the&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">cache&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">of&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">the&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">node&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">database,&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">the&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">unit&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">is&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">MB,&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">that&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">is,&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">2GB&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">here&lt;/span>
&lt;span style="color:#b06;font-weight:bold">&amp;#34;state-cache-size&amp;#34;&lt;/span>: &lt;span style="color:#00d;font-weight:bold">2147483648&lt;/span>, &lt;span style="color:#a61717;background-color:#e3d2d2">//&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">Set&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">the&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">node&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">state&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">tree&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">cache,&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">unit&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">B,&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">which&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">is&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">2GB&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">here&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">(2GB&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">=&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">2&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">*&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">1024&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">*&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">1024)&lt;/span>
&lt;span style="color:#b06;font-weight:bold">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;Your-Node-Name&amp;#34;&lt;/span>, &lt;span style="color:#a61717;background-color:#e3d2d2">//&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">Node&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">name&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">displayed&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">in&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">Node&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">Browser&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">Telemetry&lt;/span>
&lt;span style="color:#b06;font-weight:bold">&amp;#34;base-path&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;data&amp;#34;&lt;/span>, &lt;span style="color:#a61717;background-color:#e3d2d2">//&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">database&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">path,&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">the&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">default&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">under&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">linux&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">is&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">`$HOME/.local/share/chainx/chains/$CHAIN_TYPE/db`&lt;/span>
&lt;span style="color:#b06;font-weight:bold">&amp;#34;bootnodes&amp;#34;&lt;/span>: [
&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;/ip4/120.26.57.227/tcp/36789/ws/p2p/12D3KooWEAX2BcQCZP79MuxQpqLQUop7P3tZY97eNxxUgc4ZTu3k&amp;#34;&lt;/span>,
&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;/ip4/47.114.74.52/tcp/36789/ws/p2p/12D3KooWJPMUkGytfAMt3AMqm4AFn4VToXjbWZoC4Z2NxXNXvTwb&amp;#34;&lt;/span>
] &lt;span style="color:#a61717;background-color:#e3d2d2">//&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">Seed&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">node&lt;/span>, &lt;span style="color:#a61717;background-color:#e3d2d2">use&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">built-in&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">seed&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">node&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">when&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">empty&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">list&lt;/span>
}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Some rpc services are sensitive operations. If they need to be exposed to the public network, it is recommended to use a proxy server for filtering (see: [https://github.com/paritytech/substrate/wiki/Public-RPC](&lt;a href="https://github.com/paritytech/substrate/wiki/Public-RPC%5D(https://github.com/paritytech/substrate/wiki/Public-RPC)">https://github.com/paritytech/substrate/wiki/Public-RPC](https://github.com/paritytech/substrate/wiki/Public-RPC)&lt;/a> com/paritytech/substrate/wiki/Public-RPC)).&lt;/p>
&lt;p>If you know and understand the associated risks, you can include the &lt;code>--rpc-methods unsafe&lt;/code> parameter when starting the node.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">{
---snip---
&amp;#34;unsafe-ws-external&amp;#34;: true, // replace ws-external
&amp;#34;unsafe-rpc-external&amp;#34;: true, // replace rpc-external
&amp;#34;rpc-methods&amp;#34;: &amp;#34;unsafe&amp;#34;,
---snip---
}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>After your node has successfully started, you can see your node on &lt;a href="https://telemetry.chainx.org">ChainX Telemetry&lt;/a> or &lt;a href="https://telemetry.polkadot.io/#list/ChainX">Polkadot Telemetry&lt;/a>.&lt;/p>
&lt;h4 id="132-using-docker-images">1.3.2 Using docker images&lt;/h4>
&lt;p>Put the above configuration file in the current directory, name it &lt;code>config.json&lt;/code>, and remove the commented part. Run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ cat ./config.json
{
&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;log-dir&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;/log&amp;#34;&lt;/span>,
&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;enable-console-log&amp;#34;&lt;/span>: false,
&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;no-mdns&amp;#34;&lt;/span>: true,
&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;validator&amp;#34;&lt;/span>: true,
&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;unsafe-ws-external&amp;#34;&lt;/span>: true,
&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;unsafe-rpc-external&amp;#34;&lt;/span>: true,
&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;rpc-methods&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;unsafe&amp;#34;&lt;/span>,
&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;log&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;info,runtime=info&amp;#34;&lt;/span>,
&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;port&amp;#34;&lt;/span>: 20222,
&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;ws-port&amp;#34;&lt;/span>: 8087,
&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;rpc-port&amp;#34;&lt;/span>: 8086,
&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;pruning&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;archive&amp;#34;&lt;/span>,
&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;execution&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;NativeElseWasm&amp;#34;&lt;/span>,
&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;db-cache&amp;#34;&lt;/span>: 2048,
&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;state-cache-size&amp;#34;&lt;/span>: 2147483648,
&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;Your-Node-Name&amp;#34;&lt;/span>,
&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;base-path&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;/data&amp;#34;&lt;/span>,
&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;bootnodes&amp;#34;&lt;/span>: []
}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Run the following command to start the node directly in the background (refer to the previous section to synchronize blocks from the genesis block)&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">docker pull chainxorg/chainx:v4.2.0
docker run -d --restart always --name chainx &lt;span style="color:#04d;background-color:#fff0f0">\
&lt;/span>&lt;span style="color:#04d;background-color:#fff0f0">&lt;/span> -p 8086:8086 -p 8087:8087 -p 20222:20222 &lt;span style="color:#04d;background-color:#fff0f0">\
&lt;/span>&lt;span style="color:#04d;background-color:#fff0f0">&lt;/span> -v &lt;span style="color:#369">$PWD&lt;/span>/config.json:/config.json -v &lt;span style="color:#369">$PWD&lt;/span>/data:/data &lt;span style="color:#04d;background-color:#fff0f0">\
&lt;/span>&lt;span style="color:#04d;background-color:#fff0f0">&lt;/span> -v &lt;span style="color:#369">$PWD&lt;/span>/log:/log -v &lt;span style="color:#369">$PWD&lt;/span>/keystore:/keystore &lt;span style="color:#04d;background-color:#fff0f0">\
&lt;/span>&lt;span style="color:#04d;background-color:#fff0f0">&lt;/span> chainxorg/chainx:v4.2.0 /usr/local/bin/chainx &lt;span style="color:#04d;background-color:#fff0f0">\
&lt;/span>&lt;span style="color:#04d;background-color:#fff0f0">&lt;/span> --config /config.json
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Among them, each parameter is the corresponding parameter in the configuration file, and the docker running in the background can pass:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#369">$tail&lt;/span> -f log/chainx.log &lt;span style="color:#888"># View all logs&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>When the start synchronization block appears in the log, it means that the node has started successfully.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">......
2021-04-02 03:05:43:700 INFO tokio-runtime-worker substrate ⚙️ Syncing, target=#1834748 (4 peers), best: #251 (0x4d58…0729), finalized #0 (0x012c…4810), ⬇ 175.1kiB/s ⬆ 11.6kiB/s
2021-04-02 03:05:48:700 INFO tokio-runtime-worker substrate ⚙️ Syncing 74.4 bps, target=#1834748 (7 peers), best: #623 (0xe3ce…db06), finalized #601 (0x78d1…b55e), ⬇ 54.0kiB/s ⬆ 6.0kiB/s
......
&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you need to use rpc service externally, you need to add &lt;code>ws-external: true&lt;/code> and &lt;code>rpc-external: true&lt;/code> to the configuration file. Refer to [above](#config file) for other options.&lt;/p>
&lt;p>When configuring, it is recommended to change the &lt;code>name&lt;/code> item in the configuration file.&lt;/p>
&lt;p>The port mapping must be consistent with that in &lt;code>config.json&lt;/code>, otherwise rpc will not work properly.&lt;/p>
&lt;h3 id="14-registering-an-account">1.4 Registering an Account&lt;/h3>
&lt;p>You can register an account on &lt;a href="https://dapp.chainx.org/">ChainX Wallet(https://dapp.chainx.org/)&lt;/a>, and transfer a little PCX to the account as transaction fee and subsequent collateral and other expenses.
&lt;img src="../../images/add-account.png" alt="add-account">&lt;/p>
&lt;h2 id="2-register-the-node">2. Register the node&lt;/h2>
&lt;p>After successful registration, you can register a node on the &lt;a href="https://dapp.chainx.org/#/staking">&lt;code>Network&amp;gt;Staking(https://dapp.chainx.org/#/staking)&lt;/code>&lt;/a> page.&lt;/p>
&lt;p>&lt;img src="../../images/register-node.png" alt="register-node">&lt;/p>
&lt;p>Each account can only be registered once. In addition, you need to ensure that you have enough balance to pay the transaction fee before registering. Newly registered nodes are elected by default, and you do not need to perform any additional operations. In addition to the initial pledge coins when registering a node, you can also pledge again by &lt;strong>voting&lt;/strong>. After the election time, the top 40 nodes with total pledged amount will become validators to participate in the consensus.&lt;/p>
&lt;p>&lt;img src="../../images/bond.png" alt="rebond">&lt;/p>
&lt;h2 id="3-set-session-keys">3. Set Session Keys&lt;/h2>
&lt;p>You can generate Session Keys by executing the following command on the machine running the node:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ curl -H &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;Content-Type: application/json&amp;#34;&lt;/span> -d &lt;span style="color:#d20;background-color:#fff0f0">&amp;#39;{&amp;#34;id&amp;#34;:1, &amp;#34;jsonrpc&amp;#34;:&amp;#34;2.0&amp;#34;, &amp;#34;method&amp;#34;: &amp;#34;author_rotateKeys&amp;#34;, &amp;#34;params&amp;#34;:[]}&amp;#39;&lt;/span> http://localhost:&lt;span style="color:#369">$YOUR_RPC_PORT&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Among them, &lt;code>YOUR_RPC_PORT&lt;/code> is the port specified by &lt;code>rpc-port&lt;/code> when starting the node. If not specified, the default port is 8086.&lt;/p>
&lt;p>The returned results are as follows:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">{
&lt;span style="color:#b06;font-weight:bold">&amp;#34;jsonrpc&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;2.0&amp;#34;&lt;/span>,
&lt;span style="color:#b06;font-weight:bold">&amp;#34;result&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;0x42a7d53603bac173eb96e4ac133e35bcd4a49f308387a0e748b6f6a6dbf5635313f065a67a42a78a2c3e261a63523d92d4e03f9e7c9bba7c3d13b13b6983f0724c46b00699362a374f3fe43dd668eae6fcd815d0b84f88998ca5fc1c41e09b2412e2b9d3a322d9229a24cbce31d53358edc77b6fbaca7d038247743f40b6f205&amp;#34;&lt;/span>,
&lt;span style="color:#b06;font-weight:bold">&amp;#34;id&amp;#34;&lt;/span>: &lt;span style="color:#00d;font-weight:bold">1&lt;/span>
}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Among them, the &lt;code>result&lt;/code> field is the obtained Session Keys, and then set it through &lt;code>setKeys&lt;/code> in &lt;a href="https://dapp.chainx.org/#/chainstate/extrinsics">&lt;code>Developer&amp;gt;Extrinsic&lt;/code>&lt;/a>:&lt;/p>
&lt;p>&lt;img src="../../images/setkeys.png" alt="setKeys">&lt;/p>
&lt;ul>
&lt;li>Currently, &lt;code>proof&lt;/code> can be filled with &lt;code>0x00&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>Call &lt;code>nextKey&lt;/code> to verify that it is set correctly.&lt;/p>
&lt;h2 id="4-backup-node">4. Backup node&lt;/h2>
&lt;p>Due to the abnormal block generation caused by improper node deployment, it will be punished to a certain extent. Therefore, additional backup nodes can be deployed, and the backup nodes are started in &lt;code>--pruning=archive&lt;/code> mode, so that when the primary node fails, the backup node can be used instead of work to avoid being punished.&lt;/p>
&lt;h2 id="5-verify-block">5. Verify block&lt;/h2>
&lt;p>After being elected as a validator, if you see &lt;code>Prepared block for proposing at ...&lt;/code> in the log, it means that the node has successfully produced a block.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">......
Nov 04 10:12:06.008 INFO 🙌 Starting consensus session on top of parent 0x6dd1e2edbf490ade94e944b09738c258921655708f6c2b5b8a63b5e38d02ac16
Nov 04 10:12:06.009 INFO 🎁 Prepared block for proposing at 4 [hash: 0x6740b08d96a329c9be13290760d15a537f3bd6635c85261b63e44395ad830b36; parent_hash: 0x6dd1…ac16; extrinsics (2): [0xe497…419a, 0x3af6…b467]]
Nov 04 10:12:06.012 INFO 🔖 Pre-sealed block for proposal at 4. Hash now 0x66f1579117b6aba16d4f57ae7ddf19ad209c8077a4f4f78ed4cb80877754a0f5, previously 0x6740b08d96a329c9be13290760d15a537f3bd6635c85261b63e44395ad830b36.
......
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="6-validation-node-withdrawal-deselected-node-has-no-income-and-does-not-participate-in-any-staking-activities">6. Validation node withdrawal (deselected node has no income and does not participate in any staking activities)&lt;/h2>
&lt;h3 id="61-penalty-to-withdraw">6.1 Penalty to withdraw&lt;/h3>
&lt;p>When the verification node reward pool is punished to 0 or other penalties, the verification node is kicked out of the current verification node set and becomes an opt-out node.
If you want to re-participate in staking, you need to participate in the election manually.&lt;/p>
&lt;h3 id="62-active-withdrawal-if-the-verification-node-does-not-actively-withdraw-it-will-be-punished-by-the-system">6.2 Active withdrawal (if the verification node does not actively withdraw, it will be punished by the system)&lt;/h3>
&lt;p>Click &lt;code>Drop&lt;/code> in the upper right corner
&lt;img src="../../images/drop1.png" alt="drop1">
&lt;img src="../../images/drop2.png" alt="drop2">&lt;/p>
&lt;p>Or at &lt;a href="https://dapp.chainx.org/#/chainstate/extrinsics">&lt;code>Developer&amp;gt;Extrinsic&lt;/code>&lt;/a>
Setup via &lt;code>chill&lt;/code>
&lt;img src="../../images/drop3.png" alt="drop3">&lt;/p>
&lt;h3 id="63-manual-election">6.3 Manual election&lt;/h3>
&lt;p>Click &lt;code>Candidate&lt;/code> in the upper right corner
&lt;img src="../../images/candidate1.png" alt="candidate1">
&lt;img src="../../images/candidate2.png" alt="candidate2">&lt;/p>
&lt;p>Or at &lt;a href="https://dapp.chainx.org/#/chainstate/extrinsics">&lt;code>Developer&amp;gt;Extrinsic&lt;/code>&lt;/a>
Set via &lt;code>validate&lt;/code>
&lt;img src="../../images/candidate3.png" alt="candidate3">&lt;/p>
&lt;h2 id="7-precautions">7. Precautions&lt;/h2>
&lt;ul>
&lt;li>Before the first halving, each session will be about 5 minutes and a total of 50 PCX will be issued.&lt;/li>
&lt;li>A validator election is held every 12 sessions.&lt;/li>
&lt;li>If the node&amp;rsquo;s self-mortgage is less than 1PCX or the total number of votes is less than 10PCX, it will be forced to withdraw from the election when the validator is elected.&lt;/li>
&lt;li>After ChainX v4.2.0, &lt;a href="https://github.com/chainx-org/ChainX/pull/625">validator nodes in candidate state are neither rewarded nor penalized&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="8-node-penalty">8. Node Penalty&lt;/h2>
&lt;p>ChainX will issue rewards in each session and punish nodes that may do evil. The types of punishment generally include node double-signature and node offline. Once a node is found to be evil, all the rewards that the evil node deserves in the session will be punished into the treasury, and the node reward pool will be punished according to the evil coefficient reported on the chain, namely:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">penalty = max(session_reward + reward_pot_balance * F, minimum_penalty)
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>penalty&lt;/code>: penalty amount&lt;/li>
&lt;li>&lt;code>session_reward&lt;/code>: node&amp;rsquo;s session reward&lt;/li>
&lt;li>&lt;code>reward_pot_balance&lt;/code>: Node reward pool amount&lt;/li>
&lt;li>&lt;code>F&lt;/code>: Penalty coefficient, calculated by babe and im-online modules:
&lt;ul>
&lt;li>babe: &lt;a href="https://wiki.polkadot.network/docs/en/learn-staking/#babe-equivocation">node double-sign penalty details&lt;/a>, [frame/babe/src/equivocation.rs](https:/ /github.com/paritytech/substrate/blob/c60f00840034017d4b7e6d20bd4fcf9a3f5b529a/frame/babe/src/equivocation.rs#L265).&lt;/li>
&lt;li>im-online: &lt;a href="https://wiki.polkadot.network/docs/en/learn-staking/#unresponsiveness">node offline penalty details&lt;/a>, [frame/im-online/src/lib.rs](https: //github.com/paritytech/substrate/blob/c60f00840034017d4b7e6d20bd4fcf9a3f5b529a/frame/im-online/src/lib.rs#L771).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>minimum_penalty&lt;/code>: The minimum penalty value, that is, at least &lt;code>minimum_penalty&lt;/code> for each penalty.&lt;/li>
&lt;/ul>
&lt;p>ChainX nodes do not punish the principal, but punish the node reward pool. When the node reward pool is exhausted, the node will be forced to withdraw from the election.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Rust" data-lang="Rust">&lt;span style="color:#080;font-weight:bold">if&lt;/span>&lt;span style="color:#bbb"> &lt;/span>penalty&lt;span style="color:#bbb"> &lt;/span>&amp;gt;&lt;span style="color:#bbb"> &lt;/span>reward_pot_balance&lt;span style="color:#bbb"> &lt;/span>{&lt;span style="color:#bbb">
&lt;/span>&lt;span style="color:#bbb"> &lt;/span>&lt;span style="color:#888">// force the validator(offender) to be chilled
&lt;/span>&lt;span style="color:#888">&lt;/span>}&lt;span style="color:#bbb">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: Developer doc</title><link>https://chainx-org.github.io/documentation/docs/chainx/developers/</link><pubDate>Thu, 21 Apr 2022 00:00:00 +0000</pubDate><guid>https://chainx-org.github.io/documentation/docs/chainx/developers/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>developer documentation&lt;/p>
&lt;/div></description></item><item><title>Docs: Asset Transfer Bridge/Gateway</title><link>https://chainx-org.github.io/documentation/docs/chainx/bridges/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chainx-org.github.io/documentation/docs/chainx/bridges/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>Asset Transfer Bridge/Gateway (called Asset Gateway Gateway in 2.0)&lt;/p>
&lt;/div>
&lt;h2 id="介绍">介绍&lt;/h2>
&lt;p>Asset transfer bridge/gateway refers to the control module that transfers assets of other chains to ChainX or back from ChainX。&lt;/p>
&lt;p>For example, when the BTC assets on the Bitcoin chain need to be transferred to ChainX to become X-BTC, or the process of transferring X-BTC on the ChainX chain back to the Bitcoin chain, the Bitcoin transfer bridge/gateway controls the verification of this process, and Asset issuance/destruction process。&lt;/p>
&lt;h2 id="term">Term：&lt;/h2>
&lt;blockquote>
&lt;p>This chain: refers to the ChainX chain itself, such as &amp;ldquo;processing something on this chain&amp;rdquo; means &amp;ldquo;the process of including and executing something on the ChainX chain&amp;rdquo;。&lt;/p>
&lt;p>Original chain: Refers to the chain from which the asset originates after the asset is moved to ChainX. If X-BTC originates from the Bitcoin chain and exists on ChainX, the Bitcoin chain is called the original chain of X-BTC。&lt;/p>
&lt;p>Heterogeneous chain: There is a big gap between the model structure of the original chain and the ChainX/Substrate chain model structure, so it is difficult to deal with all heterogeneous chains in a unified form, and it is necessary to have corresponding processing for different chains。&lt;/p>
&lt;p>Isomorphic chain: Refers to the model structure of the original chain that is consistent with the ChainX/Substrate chain structure, basically referring to the blockchain developed with Substrate。&lt;/p>
&lt;/blockquote>
&lt;h2 id="the-core-principle-of-heterogeneous-chain-cross-chain">The core principle of heterogeneous chain cross-chain&lt;/h2>
&lt;p>Compared with the cross-chain principle of Polkadot parallel chains, the cross-chain of heterogeneous chains is essentially:&lt;/p>
&lt;ol>
&lt;li>Know/proven on the ChainX chain that something did happen on the other chain；&lt;/li>
&lt;li>If this matter is to lock assets, then issue the corresponding assets to an account on the ChainX chain；&lt;/li>
&lt;li>If this matter is to release assets, then the corresponding assets on an account will be destroyed on the ChainX chain。&lt;/li>
&lt;/ol>
&lt;p>Therefore, heterogeneous cross-chain is a variant of Oracle mode in principle。&lt;/p>
&lt;p>There are currently only two ways to solve the problem that Oracle data is sent to a certain chain and ensure the correctness of the data.&lt;/p>
&lt;ol>
&lt;li>The data itself carries the proof (it can be proved by itself), such as light node/zero-knowledge proof, etc.&lt;/li>
&lt;li>Data is proved by voting/authorizer, such as Substrate offchain worker/a link, etc.&lt;/li>
&lt;/ol>
&lt;p>Therefore, the mode of heterogeneous cross-chain will not jump out of the above two principles.&lt;/p>
&lt;h2 id="gateway-classification">Gateway classification&lt;/h2>
&lt;p>For the movement of assets between the ChainX chain and the original chain, it needs to be divided into the following two situations:&lt;/p>
&lt;ul>
&lt;li>An asset crosses onto ChainX (ie, recharge);&lt;/li>
&lt;li>The assets that cross over to ChainX are returned to the original chain (that is, withdrawn);&lt;/li>
&lt;/ul>
&lt;p>Due to the large differences in functions on heterogeneous chains, the solutions for depositing/withdrawing an asset on ChainX are different in many cases.&lt;/p>
&lt;p>Currently, for ChainX&amp;rsquo;s asset gateway model, a total of 4 types are designed to deal with different heterogeneous chain models:&lt;/p>
&lt;p>Taking the A public chain as an example, A can handle the paradigm of moving assets to ChainX and moving back to the original chain in four ways:&lt;/p>
&lt;p>1.Light node verification&lt;/p>
&lt;p>Integrate the light node of the original chain on ChainX, submit the block header of the light node and the corresponding transaction to the ChainX chain, and execute the verification of the transaction on the ChainX chain by means of the light node data self-certifying method, and confirm that the transaction is in the corresponding heterogeneous It actually happened on the chain (original chain). The heterogeneous chain needs to have the function of a light node. If there is no light node function, it cannot be supported.&lt;/p>
&lt;p>Light node verification is mostly used for the recharge process. If the withdrawal process also uses light nodes, the original chain is required to be able to write the ChainX light node verification logic. This function can almost only be used on the ChainX isomorphic chain, unless the original chain supports complex functional logic.&lt;/p>
&lt;p>&lt;strong>This mode is a purely decentralized way to cross-chain, and the data correctness is guaranteed by the light node&amp;rsquo;s own proof method.&lt;/strong>&lt;/p>
&lt;p>Example: X-BTC deposit process on ChainX.&lt;/p>
&lt;ol start="2">
&lt;li>Multi-signature control&lt;/li>
&lt;/ol>
&lt;p>The control method of cross-chain assets on ChainX and the operation method of returning assets to the original chain. It is mostly used to solve the asset management and withdrawal process after light nodes and POA recharge cross-chain assets. The meaning is that the assets of the original chain are cross-chained to ChainX, and the multi-chain mode supported by the original chain requires multiple people to hold the public key and lock the assets that are cross-chained. When assets need to be returned from ChainX to the original chain, multiple people participate in the operation and multi-signature to release the originally locked assets.&lt;/p>
&lt;p>Multi-signature control generally allocates a hot address and a cold address on the original chain, in which the deposit and withdrawal process of assets only occurs on the hot address, and the assets that have not been moved for a long time are transferred to the cold address for storage to protect the security of assets.&lt;/p>
&lt;p>When the multi-signature control is combined with the light node, the withdrawal process is generally verified by the light node verification scheme to verify the withdrawn transaction.&lt;/p>
&lt;p>&lt;strong>This mode is multi-centralized and cross-chain, and the security of assets is guaranteed by the decentralized form of multi-signature private keys.&lt;/strong>&lt;/p>
&lt;p>Example: X-BTC withdrawal process on ChainX.&lt;/p>
&lt;ol start="3">
&lt;li>
&lt;p>POA（Proof of authority）&lt;/p>
&lt;p>That is, an authorized individual or subject locks/releases assets on the original chain and issues/destroys assets on the ChainX chain.&lt;/p>
&lt;p>&lt;strong>This mode is a centralized way to cross-chain, and the security of assets is guaranteed by trusting an entity.&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>mortgage issuance&lt;/p>
&lt;p>Cross-chain your own mainnet token on Kusama/Polkadot&amp;rsquo;s ChainX parachain by staking PCX or X-BTC&lt;/p>
&lt;p>&lt;strong>This mode is a new decentralized cross-chain method.&lt;/strong>&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>Docs: Trouble shooting</title><link>https://chainx-org.github.io/documentation/docs/chainx/trouble-shooting/</link><pubDate>Wed, 20 Apr 2022 00:00:00 +0000</pubDate><guid>https://chainx-org.github.io/documentation/docs/chainx/trouble-shooting/</guid><description>
&lt;h2 id="1-how-to-unlock-balances">1. How to unlock balances?&lt;/h2>
&lt;h3 id="11-query-account-balance-locks">1.1 Query account balance locks&lt;/h3>
&lt;p>Call balances.locks via &lt;a href="https://dapp.chainx.org/#/chainstate/extrinsics">&lt;code>Developer&amp;gt;Extrinsic&lt;/code>&lt;/a>&lt;/p>
&lt;ul>
&lt;li>(1) council election&lt;/li>
&lt;/ul>
&lt;pre>&lt;code>[
{
id: pcx/phre,
amount: 100,000,000,
reasons: All
}
]
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>(2) xstaking mining&lt;/li>
&lt;/ul>
&lt;pre>&lt;code>[
{
id: staking ,
amount: 4.0000 PCX,
reasons: All
}
]
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>(3) democracy公投(ChainX)&lt;/li>
&lt;/ul>
&lt;pre>&lt;code>[
{
id: democrac,
amount: 3.0000 PCX,
reasons: Misc
}
]
&lt;/code>&lt;/pre>&lt;h3 id="12-lock-details-and-unlock-methods-of-each-module">1.2 Lock details and unlock methods of each module&lt;/h3>
&lt;ul>
&lt;li>(1) council election (ChainX)&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Query lock details: call elections.voting&lt;/strong>&lt;/p>
&lt;p>&lt;strong>unlock: call elections.removeVoter(), cancel the vote and unlock&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>(2) democracy referendum (ChainX)&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Query lock details: call democracy.votingOf&lt;/strong>&lt;/p>
&lt;p>&lt;strong>unlock: Call democracy.removeVote() to cancel the referendum vote, then call democracy.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>unlock() to unlock&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>(3) xstaking mining (ChainX)&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>Query lock details: call xStaking.locks and xStaking.nominations&lt;/strong>&lt;/p>
&lt;p>&lt;strong>unlock: call xStaking.unlockUnbondedWithdrawal() to unlock&lt;/strong>&lt;/p>
&lt;p>Note: 2022.04.07 xstaking will be unlocked and locked for two weeks&lt;/p></description></item></channel></rss>