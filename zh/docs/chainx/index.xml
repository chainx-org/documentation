<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ChainX 文档 – ChainX</title><link>https://chainx-org.github.io/documentation/zh/docs/chainx/</link><description>Recent content in ChainX on ChainX 文档</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://chainx-org.github.io/documentation/zh/docs/chainx/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: 概览</title><link>https://chainx-org.github.io/documentation/zh/docs/chainx/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chainx-org.github.io/documentation/zh/docs/chainx/overview/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>概览&lt;/p>
&lt;/div>
&lt;p>The Overview is where your users find out about your project. Depending on the size of your docset, you can have a separate overview page (like this one) or put your overview contents in the Documentation landing page (like in the Docsy User Guide).&lt;/p>
&lt;p>Try answering these questions for your user in this page:&lt;/p>
&lt;h2 id="what-is-it">What is it?&lt;/h2>
&lt;p>Introduce your project, including what it does or lets you do, why you would use it, and its primary goal (and how it achieves it). This should be similar to your README description, though you can go into a little more detail here if you want.&lt;/p>
&lt;h2 id="why-do-i-want-it">Why do I want it?&lt;/h2>
&lt;p>Help your user know if your project will help them. Useful information can include:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;strong>What is it good for?&lt;/strong>: What types of problems does your project solve? What are the benefits of using it?&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>What is it not good for?&lt;/strong>: For example, point out situations that might intuitively seem suited for your project, but aren&amp;rsquo;t for some reason. Also mention known limitations, scaling issues, or anything else that might let your users know if the project is not for them.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>What is it &lt;em>not yet&lt;/em> good for?&lt;/strong>: Highlight any useful features that are coming soon.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="where-should-i-go-next">Where should I go next?&lt;/h2>
&lt;p>Give your users next steps from the Overview. For example:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="../../../getting-started/">Getting Started&lt;/a>: Get started with $project&lt;/li>
&lt;li>&lt;a href="../../../examples/">Examples&lt;/a>: Check out some example code!&lt;/li>
&lt;/ul></description></item><item><title>Docs: 用户指南</title><link>https://chainx-org.github.io/documentation/zh/docs/chainx/users/</link><pubDate>Tue, 19 Apr 2022 00:00:00 +0000</pubDate><guid>https://chainx-org.github.io/documentation/zh/docs/chainx/users/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>用户指南&lt;/p>
&lt;/div></description></item><item><title>Docs: 验证节点指南</title><link>https://chainx-org.github.io/documentation/zh/docs/chainx/validators/</link><pubDate>Wed, 20 Apr 2022 00:00:00 +0000</pubDate><guid>https://chainx-org.github.io/documentation/zh/docs/chainx/validators/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>验证节点指南&lt;/p>
&lt;/div>
&lt;h2 id="1-准备事项">1. 准备事项&lt;/h2>
&lt;h3 id="11-一台-vps">1.1 一台 VPS&lt;/h3>
&lt;p>最简单的方式是使用一台云主机， 您可以自由选择任一主机提供商。&lt;/p>
&lt;h4 id="111-测试网硬件配置">1.1.1 测试网硬件配置&lt;/h4>
&lt;ul>
&lt;li>CPU 2 核，内存 2G, 带宽 1M, 操作系统 Ubuntu 20.04+。&lt;/li>
&lt;/ul>
&lt;h4 id="112-主网硬件配置">1.1.2 主网硬件配置&lt;/h4>
&lt;p>以阿里云为例，ChainX 主网推荐配置不低于: CPU 4 核, 内存 4 G, 带宽 10M，磁盘使用 SSD 300G+, 操作系统 20.04+.&lt;/p>
&lt;h3 id="12-安装chainx程序">1.2 安装&lt;code>chainx&lt;/code>程序&lt;/h3>
&lt;h4 id="121-从源码编译">1.2.1 从源码编译&lt;/h4>
&lt;p>安装相关依赖库, 以ubuntu 20.04为例&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">sudo apt update -y
sudo apt install --no-install-recommends -y &lt;span style="color:#04d;background-color:#fff0f0">\
&lt;/span>&lt;span style="color:#04d;background-color:#fff0f0">&lt;/span> git curl ca-certificates &lt;span style="color:#04d;background-color:#fff0f0">\
&lt;/span>&lt;span style="color:#04d;background-color:#fff0f0">&lt;/span> gcc g++ cmake clang
&lt;/code>&lt;/pre>&lt;/div>&lt;p>我们假设您已经安装好 Rust nightly 与 &lt;code>wasm32-unknown-unknown&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ rustup install nightly-2021-11-07
$ rustup override &lt;span style="color:#038">set&lt;/span> nightly-2021-11-07
$ rustup target add wasm32-unknown-unknown --toolchain nightly-2021-11-07
&lt;/code>&lt;/pre>&lt;/div>&lt;p>接下来， 您需要按照以下步骤完成编译工作：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ git clone https://github.com/chainx-org/ChainX
$ &lt;span style="color:#038">cd&lt;/span> ChainX
&lt;span style="color:#888"># 切到最新的 tag&lt;/span>
$ git checkout &lt;span style="color:#080;font-weight:bold">$(&lt;/span>git describe --tags &lt;span style="color:#080;font-weight:bold">$(&lt;/span>git rev-list --tags --max-count=1&lt;span style="color:#080;font-weight:bold">))&lt;/span>
&lt;span style="color:#888"># 编译 Release 版本的二进制&lt;/span>
$ cargo build --release
&lt;/code>&lt;/pre>&lt;/div>&lt;p>编译完成后，&lt;code>chainx&lt;/code>程序将在&lt;code>target/release/&lt;/code>目录下。&lt;/p>
&lt;h4 id="122-直接下载编译好的二进制">1.2.2 直接下载编译好的二进制&lt;/h4>
&lt;p>从 &lt;a href="https://github.com/chainx-org/ChainX/releases">GitHub release(https://github.com/chainx-org/ChainX/releases)&lt;/a> 页面下载提供编译好的二进制。&lt;/p>
&lt;h3 id="13-同步至链的最新状态">1.3 同步至链的最新状态&lt;/h3>
&lt;blockquote>
&lt;h4 id="how-to-sync-blocks-from-genesisblock-0">&lt;code>How to sync blocks from genesis(block #0)&lt;/code>&lt;/h4>
&lt;ul>
&lt;li>(0) You should know &lt;a href="https://github.com/chainx-org/ChainX/issues/609">Debug: panicked at &amp;lsquo;Storage root must match that calculated ' #609&lt;/a>
&lt;strong>if you use ChainX v4.x.x directly sync blocks will be stuck at #881910&lt;/strong> or other block.&lt;/li>
&lt;li>(1) Compile &lt;a href="https://github.com/chainx-org/ChainX/tree/v3.0.0">ChainX v3.0.0&lt;/a> by &lt;code>nightly-2020-09-30&lt;/code> or Download &lt;a href="https://github.com/chainx-org/ChainX/releases/download/v3.0.0/chainx-v3.0.0-ubuntu20.04-x86_64-unknown-linux-gnu-1">chainx-v3.0.0-ubuntu20.04-x86_64-unknown-linux-gnu-1&lt;/a>
the ChainX v3.0.0 seed nodes are bad, so you should use new mainnet bootnodes with &lt;code>--bootnodes&lt;/code>&lt;/li>
&lt;/ul>
&lt;pre>&lt;code>&amp;quot;/ip4/52.77.243.26/tcp/23555/ws/p2p/12D3KooWQ6GGfmvmmmsbKRmZqMA3A8rxaHz25HvA7JNBbcZhLXtk&amp;quot;
&amp;quot;/ip4/120.26.57.227/tcp/36789/ws/p2p/12D3KooWEAX2BcQCZP79MuxQpqLQUop7P3tZY97eNxxUgc4ZTu3k&amp;quot;
&amp;quot;/ip4/47.114.74.52/tcp/36789/ws/p2p/12D3KooWJPMUkGytfAMt3AMqm4AFn4VToXjbWZoC4Z2NxXNXvTwb&amp;quot;
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>(2) Until &lt;strong>#3038400&lt;/strong>, please use ChainX v3.0.0 to synchronize with &lt;code>NativeElseWasm (default mode)&lt;/code>&lt;/li>
&lt;li>(3) For blocks after &lt;strong>#3038400&lt;/strong>, complete (2) first, and then replace ChainX v3.0.0 with ChainX v4.x.x to complete the db migration (note that the migration process is irreversible, it is recommended to back up the data first)&lt;/li>
&lt;li>(4) ChainX v4.x.x continues to synchronize blocks&lt;/li>
&lt;/ul>
&lt;/blockquote>
&lt;p>通过下面的命令开始同步区块链:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ ./chainx-v3.0.0 --chain=mainnet --pruning=archive &lt;span style="color:#04d;background-color:#fff0f0">\
&lt;/span>&lt;span style="color:#04d;background-color:#fff0f0">&lt;/span> --bootnodes=&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;/ip4/52.77.243.26/tcp/23555/ws/p2p/12D3KooWQ6GGfmvmmmsbKRmZqMA3A8rxaHz25HvA7JNBbcZhLXtk&amp;#34;&lt;/span> &lt;span style="color:#04d;background-color:#fff0f0">\
&lt;/span>&lt;span style="color:#04d;background-color:#fff0f0">&lt;/span> --bootnodes=&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;/ip4/120.26.57.227/tcp/36789/ws/p2p/12D3KooWEAX2BcQCZP79MuxQpqLQUop7P3tZY97eNxxUgc4ZTu3k&amp;#34;&lt;/span>
&lt;span style="color:#888"># until block #3038400&lt;/span>
$ ./chainx-v4.2.0 --chain=mainnet --pruning=archive
&lt;/code>&lt;/pre>&lt;/div>&lt;p>同步完成后，以验证人模式重启节点:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ ./chainx --chain=mainnet --validator
&lt;/code>&lt;/pre>&lt;/div>&lt;p>或直接以验证人模式启动进行同步：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#888"># 使用 --validator 时，同时将默认启用存档模式即 --pruning=archive&lt;/span>
$ ./chainx --chain=mainnet --validator
&lt;/code>&lt;/pre>&lt;/div>&lt;p>不过注意，一定等待同步完成并且设置好 Session Keys 后再让节点参选。&lt;/p>
&lt;blockquote>
&lt;p>如果出现同步异常， 请确保系统时间和网络时间一致， 删除数据库之后再进行同步。&lt;/p>
&lt;/blockquote>
&lt;h4 id="131-配置文件">1.3.1 配置文件&lt;/h4>
&lt;p>对于验证者节点， 我们建议如下配置：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">{
&lt;span style="color:#b06;font-weight:bold">&amp;#34;log-dir&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;./log&amp;#34;&lt;/span>, &lt;span style="color:#a61717;background-color:#e3d2d2">//&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">日志目录&lt;/span>
&lt;span style="color:#b06;font-weight:bold">&amp;#34;enable-console-log&amp;#34;&lt;/span>: &lt;span style="color:#080;font-weight:bold">false&lt;/span>, &lt;span style="color:#a61717;background-color:#e3d2d2">//&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">同时将日志输出到控制台&lt;/span>
&lt;span style="color:#b06;font-weight:bold">&amp;#34;no-mdns&amp;#34;&lt;/span>: &lt;span style="color:#080;font-weight:bold">true&lt;/span>,
&lt;span style="color:#b06;font-weight:bold">&amp;#34;validator&amp;#34;&lt;/span>: &lt;span style="color:#080;font-weight:bold">true&lt;/span>, &lt;span style="color:#a61717;background-color:#e3d2d2">//&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">验证者节点必须为&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">true,&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">默认为false&lt;/span>
&lt;span style="color:#b06;font-weight:bold">&amp;#34;unsafe-ws-external&amp;#34;&lt;/span>: &lt;span style="color:#080;font-weight:bold">true&lt;/span>, &lt;span style="color:#a61717;background-color:#e3d2d2">//&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">验证者节点建议关闭对外的ws端口&lt;/span>
&lt;span style="color:#b06;font-weight:bold">&amp;#34;unsafe-rpc-external&amp;#34;&lt;/span>: &lt;span style="color:#080;font-weight:bold">true&lt;/span>, &lt;span style="color:#a61717;background-color:#e3d2d2">//&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">验证者节点建议关闭对外的rpc端口&lt;/span>
&lt;span style="color:#b06;font-weight:bold">&amp;#34;rpc-methods&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;unsafe&amp;#34;&lt;/span>,
&lt;span style="color:#b06;font-weight:bold">&amp;#34;log&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;info,runtime=info&amp;#34;&lt;/span>,
&lt;span style="color:#b06;font-weight:bold">&amp;#34;port&amp;#34;&lt;/span>: &lt;span style="color:#00d;font-weight:bold">20222&lt;/span>, &lt;span style="color:#a61717;background-color:#e3d2d2">//&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">指定p2p协议的tcp端口&lt;/span>
&lt;span style="color:#b06;font-weight:bold">&amp;#34;ws-port&amp;#34;&lt;/span>: &lt;span style="color:#00d;font-weight:bold">8087&lt;/span>, &lt;span style="color:#a61717;background-color:#e3d2d2">//&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">指定websocket的RPC服务端口&lt;/span>
&lt;span style="color:#b06;font-weight:bold">&amp;#34;rpc-port&amp;#34;&lt;/span>: &lt;span style="color:#00d;font-weight:bold">8086&lt;/span>, &lt;span style="color:#a61717;background-color:#e3d2d2">//&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">指定http的RPC服务端口&lt;/span>
&lt;span style="color:#b06;font-weight:bold">&amp;#34;pruning&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;archive&amp;#34;&lt;/span>, &lt;span style="color:#a61717;background-color:#e3d2d2">//&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">强烈建议加上该配置，以存档模式启动&lt;/span>
&lt;span style="color:#b06;font-weight:bold">&amp;#34;execution&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;NativeElseWasm&amp;#34;&lt;/span>,
&lt;span style="color:#b06;font-weight:bold">&amp;#34;db-cache&amp;#34;&lt;/span>: &lt;span style="color:#00d;font-weight:bold">2048&lt;/span>, &lt;span style="color:#a61717;background-color:#e3d2d2">//&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">设置节点数据库的缓存，单位MB，即这里为2GB&lt;/span>
&lt;span style="color:#b06;font-weight:bold">&amp;#34;state-cache-size&amp;#34;&lt;/span>: &lt;span style="color:#00d;font-weight:bold">2147483648&lt;/span>, &lt;span style="color:#a61717;background-color:#e3d2d2">//&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">设置节点状态树缓存，单位B，即这里为2GB&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">(2GB&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">=&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">2&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">*&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">1024&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">*&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">1024)&lt;/span>
&lt;span style="color:#b06;font-weight:bold">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;Your-Node-Name&amp;#34;&lt;/span>, &lt;span style="color:#a61717;background-color:#e3d2d2">//&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">在节点浏览器Telemetry中显示的节点名&lt;/span>
&lt;span style="color:#b06;font-weight:bold">&amp;#34;base-path&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;data&amp;#34;&lt;/span>, &lt;span style="color:#a61717;background-color:#e3d2d2">//&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">数据库路径，&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">linux下默认为`$HOME/.local/share/chainx/chains/$CHAIN_TYPE/db`&lt;/span>
&lt;span style="color:#b06;font-weight:bold">&amp;#34;bootnodes&amp;#34;&lt;/span>: [
&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;/ip4/120.26.57.227/tcp/36789/ws/p2p/12D3KooWEAX2BcQCZP79MuxQpqLQUop7P3tZY97eNxxUgc4ZTu3k&amp;#34;&lt;/span>,
&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;/ip4/47.114.74.52/tcp/36789/ws/p2p/12D3KooWJPMUkGytfAMt3AMqm4AFn4VToXjbWZoC4Z2NxXNXvTwb&amp;#34;&lt;/span>
] &lt;span style="color:#a61717;background-color:#e3d2d2">//&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">种子节点，&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">为空列表时使用内置的种子节点&lt;/span>
}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>部分 rpc 服务属于敏感操作，如需暴露于公网，建议使用代理服务器进行过滤 (详见：&lt;a href="https://github.com/paritytech/substrate/wiki/Public-RPC">https://github.com/paritytech/substrate/wiki/Public-RPC&lt;/a>).&lt;/p>
&lt;p>如果您已知悉并了解相关风险，可在启动节点时加入&lt;code>--rpc-methods unsafe&lt;/code>参数.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">{
---snip---
&amp;#34;unsafe-ws-external&amp;#34;: true, // replace ws-external
&amp;#34;unsafe-rpc-external&amp;#34;: true, // replace rpc-external
&amp;#34;rpc-methods&amp;#34;: &amp;#34;unsafe&amp;#34;,
---snip---
}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>节点成功启动后， 可以在&lt;a href="https://telemetry.chainx.org">ChainX Telemetry&lt;/a>或者 &lt;a href="https://telemetry.polkadot.io/#list/ChainX">Polkadot Telemetry&lt;/a> 上看到您的节点。&lt;/p>
&lt;h4 id="132-使用-docker-镜像">1.3.2 使用 docker 镜像&lt;/h4>
&lt;p>将上述配置文件放在当前目录下， 命名为&lt;code>config.json&lt;/code>, 去掉注释的部分。 运行如下命令：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#369">$cat&lt;/span> ./config.json
{
&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;log-dir&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;/log&amp;#34;&lt;/span>,
&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;enable-console-log&amp;#34;&lt;/span>: false,
&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;no-mdns&amp;#34;&lt;/span>: true,
&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;validator&amp;#34;&lt;/span>: true,
&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;unsafe-ws-external&amp;#34;&lt;/span>: true,
&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;unsafe-rpc-external&amp;#34;&lt;/span>: true,
&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;rpc-methods&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;unsafe&amp;#34;&lt;/span>,
&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;log&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;info,runtime=info&amp;#34;&lt;/span>,
&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;port&amp;#34;&lt;/span>: 20222,
&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;ws-port&amp;#34;&lt;/span>: 8087,
&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;rpc-port&amp;#34;&lt;/span>: 8086,
&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;pruning&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;archive&amp;#34;&lt;/span>,
&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;execution&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;NativeElseWasm&amp;#34;&lt;/span>,
&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;db-cache&amp;#34;&lt;/span>: 2048,
&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;state-cache-size&amp;#34;&lt;/span>: 2147483648,
&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;Your-Node-Name&amp;#34;&lt;/span>,
&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;base-path&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;/data&amp;#34;&lt;/span>,
&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;bootnodes&amp;#34;&lt;/span>: []
}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>运行以下命令，可以直接后台启动节点(从genesis block同步区块参考上一节)&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">docker pull chainxorg/chainx:v4.2.0
docker run -d --restart always --name chainx &lt;span style="color:#04d;background-color:#fff0f0">\
&lt;/span>&lt;span style="color:#04d;background-color:#fff0f0">&lt;/span> -p 8086:8086 -p 8087:8087 -p 20222:20222 &lt;span style="color:#04d;background-color:#fff0f0">\
&lt;/span>&lt;span style="color:#04d;background-color:#fff0f0">&lt;/span> -v &lt;span style="color:#369">$PWD&lt;/span>/config.json:/config.json -v &lt;span style="color:#369">$PWD&lt;/span>/data:/data &lt;span style="color:#04d;background-color:#fff0f0">\
&lt;/span>&lt;span style="color:#04d;background-color:#fff0f0">&lt;/span> -v &lt;span style="color:#369">$PWD&lt;/span>/log:/log -v &lt;span style="color:#369">$PWD&lt;/span>/keystore:/keystore &lt;span style="color:#04d;background-color:#fff0f0">\
&lt;/span>&lt;span style="color:#04d;background-color:#fff0f0">&lt;/span> chainxorg/chainx:v4.2.0 /usr/local/bin/chainx &lt;span style="color:#04d;background-color:#fff0f0">\
&lt;/span>&lt;span style="color:#04d;background-color:#fff0f0">&lt;/span> --config /config.json
&lt;/code>&lt;/pre>&lt;/div>&lt;p>其中，各参数为配置文件中对应参数, 后台运行的 docker 可以通过:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#369">$tail&lt;/span> -f log/chainx.log &lt;span style="color:#888"># 查看全部日志&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>当日志出现开始同步块的时候， 即说明节点成功启动。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">......
2021-04-02 03:05:43:700 INFO tokio-runtime-worker substrate ⚙️ Syncing, target=#1834748 (4 peers), best: #251 (0x4d58…0729), finalized #0 (0x012c…4810), ⬇ 175.1kiB/s ⬆ 11.6kiB/s
2021-04-02 03:05:48:700 INFO tokio-runtime-worker substrate ⚙️ Syncing 74.4 bps, target=#1834748 (7 peers), best: #623 (0xe3ce…db06), finalized #601 (0x78d1…b55e), ⬇ 54.0kiB/s ⬆ 6.0kiB/s
......
&lt;/code>&lt;/pre>&lt;/div>&lt;p>如果需要在外部使用 rpc 服务, 需要在配置文件中加入&lt;code>ws-external: true&lt;/code>和&lt;code>rpc-external: true&lt;/code>。其他选项参考&lt;a href="#%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6">上文&lt;/a>。&lt;/p>
&lt;p>在配置时，建议更改配置文件中的&lt;code>name&lt;/code>项。&lt;/p>
&lt;p>端口的映射必须与&lt;code>config.json&lt;/code>中保持一致，否则将无法正常使用 rpc。&lt;/p>
&lt;h3 id="14-注册账户">1.4 注册账户&lt;/h3>
&lt;p>您可以在&lt;a href="https://dapp.chainx.org/">ChainX钱包(https://dapp.chainx.org/)&lt;/a> 上注册账户, 并向该账户转入一点 PCX 作为交易手续费以及后续抵押等费用。&lt;/p>
&lt;p>&lt;img src="../../../images/add-account.png" alt="add-account">&lt;/p>
&lt;h2 id="2-注册节点">2. 注册节点&lt;/h2>
&lt;p>注册成功后，您可以在&lt;a href="https://dapp.chainx.org/#/staking">&lt;code>Network&amp;gt;Staking(https://dapp.chainx.org/#/staking)&lt;/code>&lt;/a> 页面上注册节点。&lt;/p>
&lt;p>&lt;img src="../../../images/register-node.png" alt="register-node">&lt;/p>
&lt;p>每个账号只能注册一次. 另外，注册之前您需要保证有足够余额支付交易手续费。新注册的节点默认参选，您无需进行额外的操作。除了注册节点时的初始质押币，您也可以通过&lt;strong>投票&lt;/strong>的方式再次进行质押。选举时间结束后，总质押量排名前 40 的节点，将成为验证人参与共识。&lt;/p>
&lt;p>&lt;img src="../../../images/bond.png" alt="rebond">&lt;/p>
&lt;h2 id="3-设置-session-keys">3. 设置 Session Keys&lt;/h2>
&lt;p>您可以在运行节点的机器上执行以下命令来生成 Session Keys:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ curl -H &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;Content-Type: application/json&amp;#34;&lt;/span> -d &lt;span style="color:#d20;background-color:#fff0f0">&amp;#39;{&amp;#34;id&amp;#34;:1, &amp;#34;jsonrpc&amp;#34;:&amp;#34;2.0&amp;#34;, &amp;#34;method&amp;#34;: &amp;#34;author_rotateKeys&amp;#34;, &amp;#34;params&amp;#34;:[]}&amp;#39;&lt;/span> http://localhost:&lt;span style="color:#369">$YOUR_RPC_PORT&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>其中，&lt;code>YOUR_RPC_PORT&lt;/code>为启动节点时&lt;code>rpc-port&lt;/code>指定的端口， 未指定的情况下默认端口是 8086。&lt;/p>
&lt;p>返回结果如下：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">{
&lt;span style="color:#b06;font-weight:bold">&amp;#34;jsonrpc&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;2.0&amp;#34;&lt;/span>,
&lt;span style="color:#b06;font-weight:bold">&amp;#34;result&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;0x42a7d53603bac173eb96e4ac133e35bcd4a49f308387a0e748b6f6a6dbf5635313f065a67a42a78a2c3e261a63523d92d4e03f9e7c9bba7c3d13b13b6983f0724c46b00699362a374f3fe43dd668eae6fcd815d0b84f88998ca5fc1c41e09b2412e2b9d3a322d9229a24cbce31d53358edc77b6fbaca7d038247743f40b6f205&amp;#34;&lt;/span>,
&lt;span style="color:#b06;font-weight:bold">&amp;#34;id&amp;#34;&lt;/span>: &lt;span style="color:#00d;font-weight:bold">1&lt;/span>
}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>其中，&lt;code>result&lt;/code>字段即为获取的 Session Keys, 然后在&lt;a href="https://dapp.chainx.org/#/chainstate/extrinsics">&lt;code>Developer&amp;gt;Extrinsic&lt;/code>&lt;/a> 通过&lt;code>setKeys&lt;/code>进行设置：&lt;/p>
&lt;p>&lt;img src="../../../images/setkeys.png" alt="setKeys">&lt;/p>
&lt;ul>
&lt;li>目前，&lt;code>proof&lt;/code> 填入&lt;code>0x00&lt;/code> 即可。&lt;/li>
&lt;/ul>
&lt;p>调用&lt;code>nextKey&lt;/code>可以验证是否正确设置。&lt;/p>
&lt;h2 id="4-备份节点">4. 备份节点&lt;/h2>
&lt;p>由于当节点部署不当导致出块异常时， 会受到一定的惩罚。 所以可以部署额外的备份节点， 备份节点以&lt;code>--pruning=archive&lt;/code>模式启动， 这样当主节点出现异常时， 可以用备份节点代替工作， 以免受到惩罚。&lt;/p>
&lt;h2 id="5-验证出块">5. 验证出块&lt;/h2>
&lt;p>当选验证人之后，如果在日志中看到&lt;code>Prepared block for proposing at ...&lt;/code>, 即说明节点已成功出块。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">......
Nov 04 10:12:06.008 INFO 🙌 Starting consensus session on top of parent 0x6dd1e2edbf490ade94e944b09738c258921655708f6c2b5b8a63b5e38d02ac16
Nov 04 10:12:06.009 INFO 🎁 Prepared block for proposing at 4 [hash: 0x6740b08d96a329c9be13290760d15a537f3bd6635c85261b63e44395ad830b36; parent_hash: 0x6dd1…ac16; extrinsics (2): [0xe497…419a, 0x3af6…b467]]
Nov 04 10:12:06.012 INFO 🔖 Pre-sealed block for proposal at 4. Hash now 0x66f1579117b6aba16d4f57ae7ddf19ad209c8077a4f4f78ed4cb80877754a0f5, previously 0x6740b08d96a329c9be13290760d15a537f3bd6635c85261b63e44395ad830b36.
......
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="6-验证节点退选退选节点无收益不参与任何staking活动">6. 验证节点退选（退选节点无收益，不参与任何staking活动）&lt;/h2>
&lt;h3 id="61-被罚退选">6.1 被罚退选&lt;/h3>
&lt;p>当验证节点奖池被惩罚为0或其他惩罚, 验证节点被踢出当前验证节点集合, 成为退选节点。
若想重新参与staking，则需要手动参选。&lt;/p>
&lt;h3 id="62-主动退选如果验证节点不主动退选会被系统惩罚">6.2 主动退选(如果验证节点不主动退选,会被系统惩罚)&lt;/h3>
&lt;p>点击右上角 &lt;code>退选(Drop)&lt;/code>
&lt;img src="../../../images/drop1.png" alt="drop1">
&lt;img src="../../../images/drop2.png" alt="drop2">&lt;/p>
&lt;p>或者在&lt;a href="https://dapp.chainx.org/#/chainstate/extrinsics">&lt;code>Developer&amp;gt;Extrinsic&lt;/code>&lt;/a>
通过&lt;code>chill&lt;/code>进行设置
&lt;img src="../../../images/drop3.png" alt="drop3">&lt;/p>
&lt;h3 id="63-手动参选">6.3 手动参选&lt;/h3>
&lt;p>点击右上角 &lt;code>参选(Candidate)&lt;/code>
&lt;img src="../../../images/candidate1.png" alt="candidate1">
&lt;img src="../../../images/candidate2.png" alt="candidate2">&lt;/p>
&lt;p>或者在&lt;a href="https://dapp.chainx.org/#/chainstate/extrinsics">&lt;code>Developer&amp;gt;Extrinsic&lt;/code>&lt;/a>
通过&lt;code>validate&lt;/code>进行设置
&lt;img src="../../../images/candidate3.png" alt="candidate3">&lt;/p>
&lt;h2 id="7-注意事项">7. 注意事项&lt;/h2>
&lt;ul>
&lt;li>第一次减半前，每个 session 约 5 分钟，共发行 50 PCX。&lt;/li>
&lt;li>每 12 个 session 进行一次验证人选举换届。&lt;/li>
&lt;li>如果节点自抵押小于 1PCX 或总得票数小于 10PCX, 在选举验证人时将会被强制退选。&lt;/li>
&lt;li>ChainX v4.2.0之后, &lt;a href="https://github.com/chainx-org/ChainX/pull/625">候选状态的验证节点既不被奖励也不被惩罚&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="8-节点惩罚">8. 节点惩罚&lt;/h2>
&lt;p>ChainX 在每个 session 会发放奖励，同时惩罚可能作恶的节点，惩罚类型一般包括节点双签与节点离线。一旦节点被发现作恶，作恶节点在该 session 的应得奖励将会被全部惩罚进国库，同时按照链上汇报的作恶系数惩罚节点奖池, 即：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">penalty = max(session_reward + reward_pot_balance * F, minimum_penalty)
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>&lt;code>penalty&lt;/code>: 应罚金额&lt;/li>
&lt;li>&lt;code>session_reward&lt;/code>: 节点的 session 奖励&lt;/li>
&lt;li>&lt;code>reward_pot_balance&lt;/code>: 节点奖池金额&lt;/li>
&lt;li>&lt;code>F&lt;/code>: 惩罚系数，由 babe 与 im-online 模块计算得出:
&lt;ul>
&lt;li>babe: &lt;a href="https://wiki.polkadot.network/docs/en/learn-staking/#babe-equivocation">节点双签惩罚详情&lt;/a>, &lt;a href="https://github.com/paritytech/substrate/blob/c60f00840034017d4b7e6d20bd4fcf9a3f5b529a/frame/babe/src/equivocation.rs#L265">frame/babe/src/equivocation.rs&lt;/a>.&lt;/li>
&lt;li>im-online: &lt;a href="https://wiki.polkadot.network/docs/en/learn-staking/#unresponsiveness">节点离线惩罚详情&lt;/a>, &lt;a href="https://github.com/paritytech/substrate/blob/c60f00840034017d4b7e6d20bd4fcf9a3f5b529a/frame/im-online/src/lib.rs#L771">frame/im-online/src/lib.rs&lt;/a>.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;code>minimum_penalty&lt;/code>: 最小惩罚值, 即每次惩罚至少罚 &lt;code>minimum_penalty&lt;/code>。&lt;/li>
&lt;/ul>
&lt;p>ChainX 节点作恶并不惩罚本金，而是惩罚节点奖池。当节点奖池被罚完后，节点会被强制退选。&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-Rust" data-lang="Rust">&lt;span style="color:#080;font-weight:bold">if&lt;/span>&lt;span style="color:#bbb"> &lt;/span>penalty&lt;span style="color:#bbb"> &lt;/span>&amp;gt;&lt;span style="color:#bbb"> &lt;/span>reward_pot_balance&lt;span style="color:#bbb"> &lt;/span>{&lt;span style="color:#bbb">
&lt;/span>&lt;span style="color:#bbb">&lt;/span>&lt;span style="color:#888">// force the validator(offender) to be chilled
&lt;/span>&lt;span style="color:#888">&lt;/span>}&lt;span style="color:#bbb">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: 开发者文档</title><link>https://chainx-org.github.io/documentation/zh/docs/chainx/developers/</link><pubDate>Thu, 21 Apr 2022 00:00:00 +0000</pubDate><guid>https://chainx-org.github.io/documentation/zh/docs/chainx/developers/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>开发者文档&lt;/p>
&lt;/div></description></item><item><title>Docs: 资产转接桥/网关（2.0中称为资产网关Gateway）</title><link>https://chainx-org.github.io/documentation/zh/docs/chainx/bridges/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://chainx-org.github.io/documentation/zh/docs/chainx/bridges/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>资产转接桥/网关（2.0中称为资产网关Gateway）&lt;/p>
&lt;/div>
&lt;h2 id="介绍">介绍&lt;/h2>
&lt;p>资产转接桥/网关指代其他链的资产转移到ChainX或从ChainX转移回去的控制模块。&lt;/p>
&lt;p>例如当Bitcoin链上的BTC资产需要转移到ChainX上成为X-BTC，或将ChainX链上的X-BTC转移回到Bitcoin链上的过程，由Bitcoin转接桥/网关控制这个过程的验证，及资产发放/销毁过程。&lt;/p>
&lt;h2 id="术语">术语：&lt;/h2>
&lt;blockquote>
&lt;p>本链：指代ChainX链自身，如“本链上处理某事物”含义为“在ChainX链上包含并执行某事物的过程”。&lt;/p>
&lt;p>原链：指代资产移动到ChainX后，资产来源的那条链，如X-BTC来源于Bitcoin链存在于ChainX上，则Bitcoin链称为X-BTC的原链。&lt;/p>
&lt;p>异构链：指代原链的模型结构和ChainX/Substrate链模型结构差距较大，因此很难有统一的形态处理所有的异构链，需要针对不同的链有对应的处理。&lt;/p>
&lt;p>同构链：指原链的模型结构和ChainX/Substrate链结构一致，基本指代用Substrate开发的区块链。&lt;/p>
&lt;/blockquote>
&lt;h2 id="异构链跨链的核心原理">异构链跨链的核心原理&lt;/h2>
&lt;p>相对于Polkadot平行链的跨链原理而言，异构链跨链本质上是：&lt;/p>
&lt;ol>
&lt;li>在ChainX链上知道/证明在另一条链上确实发生过某件事情；&lt;/li>
&lt;li>若这件事情是锁定资产，那么在ChainX链上发放对应的资产给某个账户；&lt;/li>
&lt;li>若这件事情是释放资产，那么在ChainX链上将某个账户上对应的资产进行销毁。&lt;/li>
&lt;/ol>
&lt;p>因此异构跨链从原理上而言是一种Oracle模式的变种。&lt;/p>
&lt;p>当前解决Oracle数据发送到某条链上且保证数据正确性的方式原理上只有两种&lt;/p>
&lt;ol>
&lt;li>数据自身携带证明（自身可证明），如轻节点/零知识证明等&lt;/li>
&lt;li>数据靠投票证明/靠授权者证明，如Substrate offchain worker/某link等&lt;/li>
&lt;/ol>
&lt;p>因此异构跨链的模式也不会跳出以上两种原理。&lt;/p>
&lt;h2 id="网关分类">网关分类&lt;/h2>
&lt;p>对于资产在ChainX链与原链的移动过程需要分为以下两种情况：&lt;/p>
&lt;ul>
&lt;li>一个资产跨到ChainX上（即充值）；&lt;/li>
&lt;li>跨到ChainX上的资产返回到原链上（即提现）；&lt;/li>
&lt;/ul>
&lt;p>由于异构链上功能差异很大，因此一个资产相对于ChainX上的充值/提现很多情况下解决方案是不相同的。&lt;/p>
&lt;p>当前对于ChainX的资产网关模型，总共设计了4种类型以应对不同的异构链模式：&lt;/p>
&lt;p>以 A公链为例子， A 可以通过4种方式处理资产移动到ChainX及移动回原链的范式：&lt;/p>
&lt;ol>
&lt;li>
&lt;p>轻节点验证&lt;/p>
&lt;p>在ChainX上集成原链的轻节点，将轻节点的区块头及对应的交易提交到ChainX链上，通过轻节点数据自带证明的方式在ChainX链上执行交易的验证，确定交易在对应异构链（原链）上真实发生。需要该异构链具备轻节点的功能。若没有轻节点功能无法支持。&lt;/p>
&lt;p>轻节点验证大多用于充值过程，若需提现过程也使用轻节点，则要求原链上能编写ChainX轻节点验证逻辑，该功能几乎只能在ChainX同构链上使用，除非该原链支持复杂的功能性逻辑。&lt;/p>
&lt;p>&lt;strong>该模式是纯去中心化方式跨链，通过轻节点自带证明的方式保证数据正确性。&lt;/strong>&lt;/p>
&lt;p>例子：ChainX上的X-BTC充值过程。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>多签控制&lt;/p>
&lt;p>在ChainX上跨链资产的控制方式及将资产返回原链的操作方式。多用于解决轻节点及POA充值跨链资产后，资产的管理及提现过程。含义为原链资产跨链到ChainX上，由原链上支持的多链模式由多人持有公钥，锁定被跨链的资产。当资产需要从ChainX上返回到原链上上，多人参与操作多签，释放原先锁定的资产。&lt;/p>
&lt;p>多签控制一般会在原链上分配一个热地址和一个冷地址，其中资产的充值提现过程只在热地址上发生，长时间不移动的资产转移到冷地址上保存，以保护资产安全性。&lt;/p>
&lt;p>当多签控制与轻节点结合时，提现过程一般会由轻节点验证方案对提现的交易进行验证。&lt;/p>
&lt;p>&lt;strong>该模式是多中心化方式跨链，通过多签私钥分散的形式保证资产安全性。&lt;/strong>&lt;/p>
&lt;p>例子：ChainX上的X-BTC提现过程。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>POA（Proof of authority）&lt;/p>
&lt;p>即某个经过授权的个人或主体在原链锁定/释放资产，在ChainX链上发放/销毁资产的过程.&lt;/p>
&lt;p>&lt;strong>该模式是中心化方式跨链，通过信任某实体的形式保证资产安全。&lt;/strong>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>抵押发行&lt;/p>
&lt;p>通过抵押PCX或者X-BTC， 在Kusama/Polkadot的ChainX平行链上跨链自己的主网代币&lt;/p>
&lt;p>&lt;strong>该模式是新型去中心化跨链方式。&lt;/strong>&lt;/p>
&lt;/li>
&lt;/ol></description></item><item><title>Docs: 常见问题</title><link>https://chainx-org.github.io/documentation/zh/docs/chainx/trouble-shooting/</link><pubDate>Wed, 20 Apr 2022 00:00:00 +0000</pubDate><guid>https://chainx-org.github.io/documentation/zh/docs/chainx/trouble-shooting/</guid><description>
&lt;h2 id="1-how-to-unlock-balances">1. How to unlock balances?&lt;/h2>
&lt;h3 id="11-查询账户余额的locks">1.1 查询账户余额的locks&lt;/h3>
&lt;p>通过 &lt;a href="https://dapp.chainx.org/#/chainstate/extrinsics">&lt;code>Developer&amp;gt;Extrinsic&lt;/code>&lt;/a> 调用 balances.locks&lt;/p>
&lt;ul>
&lt;li>(1) council election&lt;/li>
&lt;/ul>
&lt;pre>&lt;code>[
{
id: pcx/phre,
amount: 100,000,000,
reasons: All
}
]
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>(2) xstaking mining&lt;/li>
&lt;/ul>
&lt;pre>&lt;code>[
{
id: staking ,
amount: 4.0000 PCX,
reasons: All
}
]
&lt;/code>&lt;/pre>&lt;ul>
&lt;li>(3) democracy公投(ChainX)&lt;/li>
&lt;/ul>
&lt;pre>&lt;code>[
{
id: democrac,
amount: 3.0000 PCX,
reasons: Misc
}
]
&lt;/code>&lt;/pre>&lt;h3 id="12-各个模块的lock详情和unlock方法">1.2 各个模块的lock详情和unlock方法&lt;/h3>
&lt;ul>
&lt;li>(1) council election (ChainX)&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>查询lock详情：调用 elections.voting&lt;/strong>&lt;/p>
&lt;p>&lt;strong>unlock： 调用elections.removeVoter(), 取消投票并解锁&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>(2) democracy 公投 (ChainX)&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>查询lock详情：调用 democracy.votingOf&lt;/strong>&lt;/p>
&lt;p>&lt;strong>unlock:  调用democracy.removeVote()取消公投投票，再调用democracy.&lt;/strong>&lt;/p>
&lt;p>&lt;strong>unlock()解锁&lt;/strong>&lt;/p>
&lt;ul>
&lt;li>(3) xstaking mining (ChainX)&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>查询lock详情： 调用 xStaking.locks 和 xStaking.nominations&lt;/strong>&lt;/p>
&lt;p>&lt;strong>unlock： 调用xStaking.unlockUnbondedWithdrawal()解锁&lt;/strong>&lt;/p>
&lt;p>备注: 2022.04.07 xstaking 解绑锁定两周&lt;/p></description></item></channel></rss>