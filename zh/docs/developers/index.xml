<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ChainX 文档 – 开发者</title><link>/zh/docs/developers/</link><description>Recent content in 开发者 on ChainX 文档</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Thu, 05 Jan 2017 00:00:00 +0000</lastBuildDate><atom:link href="/zh/docs/developers/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: FAQ</title><link>/zh/docs/developers/faq/</link><pubDate>Mon, 13 Jul 2020 00:00:00 +0000</pubDate><guid>/zh/docs/developers/faq/</guid><description>
&lt;p>&lt;strong>Q&lt;/strong>: 为什么出现&lt;code>&amp;quot;error&amp;quot;: {&amp;quot;code&amp;quot;: -32601, &amp;quot;message&amp;quot;: &amp;quot;Method not found&amp;quot;}&lt;/code>?&lt;br>
&lt;strong>A&lt;/strong>: 当端口可被外部网络访问时，部分rpc被禁用，可以尝试设置&lt;code>{rpc,ws}-external&lt;/code>为&lt;code>false&lt;/code>, 或者打开&lt;code>unsafe-{rpc,ws}-external&lt;/code>选项。&lt;/p></description></item><item><title>Docs: RPC</title><link>/zh/docs/developers/rpc/</link><pubDate>Mon, 13 Jul 2020 00:00:00 +0000</pubDate><guid>/zh/docs/developers/rpc/</guid><description>
&lt;h2 id="assets">Assets&lt;/h2>
&lt;h2 id="staking">Staking&lt;/h2>
&lt;h3 id="xstaking_getvalidators">&lt;code>xstaking_getValidators&lt;/code>&lt;/h3>
&lt;p>Parameters: &lt;code>[]&lt;/code>&lt;/p>
&lt;p>Request:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">{
&lt;span style="color:#b06;font-weight:bold">&amp;#34;id&amp;#34;&lt;/span>:&lt;span style="color:#00d;font-weight:bold">1&lt;/span>,
&lt;span style="color:#b06;font-weight:bold">&amp;#34;jsonrpc&amp;#34;&lt;/span>:&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;2.0&amp;#34;&lt;/span>,
&lt;span style="color:#b06;font-weight:bold">&amp;#34;method&amp;#34;&lt;/span>:&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;xstaking_getValidators&amp;#34;&lt;/span>,
&lt;span style="color:#b06;font-weight:bold">&amp;#34;params&amp;#34;&lt;/span>:[]
}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Response:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">{
&lt;span style="color:#b06;font-weight:bold">&amp;#34;jsonrpc&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;2.0&amp;#34;&lt;/span>,
&lt;span style="color:#b06;font-weight:bold">&amp;#34;result&amp;#34;&lt;/span>: [
{
&lt;span style="color:#b06;font-weight:bold">&amp;#34;account&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY&amp;#34;&lt;/span>,
&lt;span style="color:#b06;font-weight:bold">&amp;#34;isChilled&amp;#34;&lt;/span>: &lt;span style="color:#080;font-weight:bold">false&lt;/span>,
&lt;span style="color:#b06;font-weight:bold">&amp;#34;isValidating&amp;#34;&lt;/span>: &lt;span style="color:#080;font-weight:bold">true&lt;/span>,
&lt;span style="color:#b06;font-weight:bold">&amp;#34;lastChilled&amp;#34;&lt;/span>: &lt;span style="color:#080;font-weight:bold">null&lt;/span>,
&lt;span style="color:#b06;font-weight:bold">&amp;#34;lastTotalVoteWeight&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;0&amp;#34;&lt;/span>,
&lt;span style="color:#b06;font-weight:bold">&amp;#34;lastTotalVoteWeightUpdate&amp;#34;&lt;/span>: &lt;span style="color:#00d;font-weight:bold">0&lt;/span>,
&lt;span style="color:#b06;font-weight:bold">&amp;#34;referralId&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;Alice&amp;#34;&lt;/span>,
&lt;span style="color:#b06;font-weight:bold">&amp;#34;registeredAt&amp;#34;&lt;/span>: &lt;span style="color:#00d;font-weight:bold">0&lt;/span>,
&lt;span style="color:#b06;font-weight:bold">&amp;#34;rewardPotAccount&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;5EJ3va1i3SYn3mTmKzoZmTjJgQJwqrT1kEuDhFwEcmbi7oE7&amp;#34;&lt;/span>,
&lt;span style="color:#b06;font-weight:bold">&amp;#34;rewardPotBalance&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;28512000000&amp;#34;&lt;/span>,
&lt;span style="color:#b06;font-weight:bold">&amp;#34;selfBonded&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;10000000000000&amp;#34;&lt;/span>,
&lt;span style="color:#b06;font-weight:bold">&amp;#34;total&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;10000000000000&amp;#34;&lt;/span>
}
],
&lt;span style="color:#b06;font-weight:bold">&amp;#34;id&amp;#34;&lt;/span>: &lt;span style="color:#00d;font-weight:bold">1&lt;/span>
}
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="xstaking_getvalidatorbyaccount">&lt;code>xstaking_getValidatorByAccount&lt;/code>&lt;/h3>
&lt;p>Parameters: &lt;code>[AccountId]&lt;/code>&lt;/p>
&lt;p>Request:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">{
&lt;span style="color:#b06;font-weight:bold">&amp;#34;id&amp;#34;&lt;/span>:&lt;span style="color:#00d;font-weight:bold">1&lt;/span>,
&lt;span style="color:#b06;font-weight:bold">&amp;#34;jsonrpc&amp;#34;&lt;/span>:&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;2.0&amp;#34;&lt;/span>,
&lt;span style="color:#b06;font-weight:bold">&amp;#34;method&amp;#34;&lt;/span>:&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;xstaking_getValidatorByAccount&amp;#34;&lt;/span>,
&lt;span style="color:#b06;font-weight:bold">&amp;#34;params&amp;#34;&lt;/span>:[&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY&amp;#34;&lt;/span>]
}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Response:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">{
&lt;span style="color:#b06;font-weight:bold">&amp;#34;jsonrpc&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;2.0&amp;#34;&lt;/span>,
&lt;span style="color:#b06;font-weight:bold">&amp;#34;result&amp;#34;&lt;/span>: {
&lt;span style="color:#b06;font-weight:bold">&amp;#34;account&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY&amp;#34;&lt;/span>, &lt;span style="color:#a61717;background-color:#e3d2d2">//&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">节点账户地址&lt;/span>
&lt;span style="color:#b06;font-weight:bold">&amp;#34;isChilled&amp;#34;&lt;/span>: &lt;span style="color:#080;font-weight:bold">false&lt;/span>, &lt;span style="color:#a61717;background-color:#e3d2d2">//&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">是否退选，false&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">表示未退选&lt;/span>
&lt;span style="color:#b06;font-weight:bold">&amp;#34;isValidating&amp;#34;&lt;/span>: &lt;span style="color:#080;font-weight:bold">true&lt;/span>, &lt;span style="color:#a61717;background-color:#e3d2d2">//&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">是否正在参与出块&lt;/span>
&lt;span style="color:#b06;font-weight:bold">&amp;#34;lastChilled&amp;#34;&lt;/span>: &lt;span style="color:#080;font-weight:bold">null&lt;/span>, &lt;span style="color:#a61717;background-color:#e3d2d2">//&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">节点上一次退选高度。如果为&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">null,&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">表示节点从未退选过。&lt;/span>
&lt;span style="color:#b06;font-weight:bold">&amp;#34;lastTotalVoteWeight&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;0&amp;#34;&lt;/span>, &lt;span style="color:#a61717;background-color:#e3d2d2">//&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">节点上一次总票龄&lt;/span>
&lt;span style="color:#b06;font-weight:bold">&amp;#34;lastTotalVoteWeightUpdate&amp;#34;&lt;/span>: &lt;span style="color:#00d;font-weight:bold">0&lt;/span>, &lt;span style="color:#a61717;background-color:#e3d2d2">//&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">节点总票龄上一次更新高度&lt;/span>
&lt;span style="color:#b06;font-weight:bold">&amp;#34;referralId&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;Alice&amp;#34;&lt;/span>, &lt;span style="color:#a61717;background-color:#e3d2d2">//&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">验证人的推荐人ID,&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">可用于跨链渠道推荐,&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">分享跨链挖矿用户的10%奖励。&lt;/span>
&lt;span style="color:#b06;font-weight:bold">&amp;#34;registeredAt&amp;#34;&lt;/span>: &lt;span style="color:#00d;font-weight:bold">0&lt;/span>, &lt;span style="color:#a61717;background-color:#e3d2d2">//&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">节点注册高度&lt;/span>
&lt;span style="color:#b06;font-weight:bold">&amp;#34;rewardPotAccount&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;5EJ3va1i3SYn3mTmKzoZmTjJgQJwqrT1kEuDhFwEcmbi7oE7&amp;#34;&lt;/span>, &lt;span style="color:#a61717;background-color:#e3d2d2">//&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">奖池地址&lt;/span>
&lt;span style="color:#b06;font-weight:bold">&amp;#34;rewardPotBalance&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;17107200000&amp;#34;&lt;/span>, &lt;span style="color:#a61717;background-color:#e3d2d2">//&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">奖池金额&lt;/span>
&lt;span style="color:#b06;font-weight:bold">&amp;#34;selfBonded&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;10000000000000&amp;#34;&lt;/span>, &lt;span style="color:#a61717;background-color:#e3d2d2">//&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">自抵押数&lt;/span>
&lt;span style="color:#b06;font-weight:bold">&amp;#34;total&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;10000000000000&amp;#34;&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">//&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">总得票数&lt;/span>
},
&lt;span style="color:#b06;font-weight:bold">&amp;#34;id&amp;#34;&lt;/span>: &lt;span style="color:#00d;font-weight:bold">1&lt;/span>
}
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="xstaking_getdividendbyaccount">&lt;code>xstaking_getDividendByAccount&lt;/code>&lt;/h3>
&lt;p>获取用户的投票分红。&lt;/p>
&lt;p>Parameters: &lt;code>[AccountId]&lt;/code>&lt;/p>
&lt;p>Request:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">{
&lt;span style="color:#b06;font-weight:bold">&amp;#34;id&amp;#34;&lt;/span>:&lt;span style="color:#00d;font-weight:bold">1&lt;/span>,
&lt;span style="color:#b06;font-weight:bold">&amp;#34;jsonrpc&amp;#34;&lt;/span>:&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;2.0&amp;#34;&lt;/span>,
&lt;span style="color:#b06;font-weight:bold">&amp;#34;method&amp;#34;&lt;/span>:&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;xstaking_getDividendByAccount&amp;#34;&lt;/span>,
&lt;span style="color:#b06;font-weight:bold">&amp;#34;params&amp;#34;&lt;/span>:[&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY&amp;#34;&lt;/span>]
}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Response:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">{
&lt;span style="color:#b06;font-weight:bold">&amp;#34;jsonrpc&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;2.0&amp;#34;&lt;/span>,
&lt;span style="color:#b06;font-weight:bold">&amp;#34;result&amp;#34;&lt;/span>: {
&lt;span style="color:#b06;font-weight:bold">&amp;#34;5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;2851200000&amp;#34;&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">//&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">key&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">为该用户投票的验证人地址，value&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">为对应的分红奖励。&lt;/span>
},
&lt;span style="color:#b06;font-weight:bold">&amp;#34;id&amp;#34;&lt;/span>: &lt;span style="color:#00d;font-weight:bold">1&lt;/span>
}
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="xstaking_getnominationbyaccount">&lt;code>xstaking_getNominationByAccount&lt;/code>&lt;/h3>
&lt;p>获取用户的投票信息, 包括投票金额，票龄等。&lt;/p>
&lt;p>Parameters: &lt;code>[AccountId]&lt;/code>&lt;/p>
&lt;p>Request:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">{
&lt;span style="color:#b06;font-weight:bold">&amp;#34;id&amp;#34;&lt;/span>:&lt;span style="color:#00d;font-weight:bold">1&lt;/span>,
&lt;span style="color:#b06;font-weight:bold">&amp;#34;jsonrpc&amp;#34;&lt;/span>:&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;2.0&amp;#34;&lt;/span>,
&lt;span style="color:#b06;font-weight:bold">&amp;#34;method&amp;#34;&lt;/span>:&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;xstaking_getNominationByAccount&amp;#34;&lt;/span>,
&lt;span style="color:#b06;font-weight:bold">&amp;#34;params&amp;#34;&lt;/span>:[&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY&amp;#34;&lt;/span>]
}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Response:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-json" data-lang="json">{
&lt;span style="color:#b06;font-weight:bold">&amp;#34;jsonrpc&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;2.0&amp;#34;&lt;/span>,
&lt;span style="color:#b06;font-weight:bold">&amp;#34;result&amp;#34;&lt;/span>: {
&lt;span style="color:#b06;font-weight:bold">&amp;#34;5GrwvaEF5zXb26Fz9rcQpDWS57CtERHpNehXCPcNoHGKutQY&amp;#34;&lt;/span>: { &lt;span style="color:#a61717;background-color:#e3d2d2">//&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">key&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">为验证人地址&lt;/span>
&lt;span style="color:#b06;font-weight:bold">&amp;#34;lastVoteWeight&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;0&amp;#34;&lt;/span>, &lt;span style="color:#a61717;background-color:#e3d2d2">//&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">上一次用户总票龄&lt;/span>
&lt;span style="color:#b06;font-weight:bold">&amp;#34;lastVoteWeightUpdate&amp;#34;&lt;/span>: &lt;span style="color:#00d;font-weight:bold">0&lt;/span>, &lt;span style="color:#a61717;background-color:#e3d2d2">//&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">上一次用户总票龄更新高度&lt;/span>
&lt;span style="color:#b06;font-weight:bold">&amp;#34;nomination&amp;#34;&lt;/span>: &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;500000000000000000000000&amp;#34;&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">//&lt;/span> &lt;span style="color:#a61717;background-color:#e3d2d2">用户对该节点的投票金额&lt;/span>
}
},
&lt;span style="color:#b06;font-weight:bold">&amp;#34;id&amp;#34;&lt;/span>: &lt;span style="color:#00d;font-weight:bold">1&lt;/span>
}
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="dex">DEX&lt;/h2></description></item><item><title>Docs: JS-SDK</title><link>/zh/docs/developers/js-sdk/</link><pubDate>Mon, 13 Jul 2020 00:00:00 +0000</pubDate><guid>/zh/docs/developers/js-sdk/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>This is a placeholder page. Replace it with your own content.&lt;/p>
&lt;/div>
&lt;h2 id="安装">安装&lt;/h2>
&lt;p>npm install @chainx-v2/api&lt;/p>
&lt;h2 id="快速开始">快速开始&lt;/h2>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#080;font-weight:bold">const&lt;/span> { ChainX } = require(&lt;span style="color:#d20;background-color:#fff0f0">&amp;#39;@chainx-v2/api&amp;#39;&lt;/span>);
async &lt;span style="color:#080;font-weight:bold">function&lt;/span> main () {
&lt;span style="color:#888">// Initialise the chainx to connect to the local node
&lt;/span>&lt;span style="color:#888">&lt;/span> &lt;span style="color:#080;font-weight:bold">const&lt;/span> chainx = &lt;span style="color:#080;font-weight:bold">new&lt;/span> ChainX(&lt;span style="color:#d20;background-color:#fff0f0">&amp;#39;ws://47.114.131.193:9000&amp;#39;&lt;/span>);
&lt;span style="color:#888">// Create the API and wait until ready
&lt;/span>&lt;span style="color:#888">&lt;/span> await chainx.ready();
&lt;span style="color:#080;font-weight:bold">const&lt;/span> api = chainx.getApi();
&lt;span style="color:#888">//get assets
&lt;/span>&lt;span style="color:#888">&lt;/span> &lt;span style="color:#080;font-weight:bold">const&lt;/span> assets = await api.rpc.xassets.getAssets();
console.log(&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;balance:&amp;#34;&lt;/span> + assets);
&lt;span style="color:#888">// Retrieve the chain &amp;amp; node information information via rpc calls
&lt;/span>&lt;span style="color:#888">&lt;/span> &lt;span style="color:#080;font-weight:bold">const&lt;/span> [chain, nodeName, nodeVersion] = await &lt;span style="color:#038">Promise&lt;/span>.all([
api.rpc.system.chain(),
api.rpc.system.name(),
api.rpc.system.version()
]);
console.log(&lt;span style="color:#d20;background-color:#fff0f0">`You are connected to chain &lt;/span>&lt;span style="color:#33b;background-color:#fff0f0">${&lt;/span>chain&lt;span style="color:#33b;background-color:#fff0f0">}&lt;/span>&lt;span style="color:#d20;background-color:#fff0f0"> using &lt;/span>&lt;span style="color:#33b;background-color:#fff0f0">${&lt;/span>nodeName&lt;span style="color:#33b;background-color:#fff0f0">}&lt;/span>&lt;span style="color:#d20;background-color:#fff0f0"> v&lt;/span>&lt;span style="color:#33b;background-color:#fff0f0">${&lt;/span>nodeVersion&lt;span style="color:#33b;background-color:#fff0f0">}&lt;/span>&lt;span style="color:#d20;background-color:#fff0f0">`&lt;/span>);
}
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="chainxjs">chainx.js&lt;/h2>
&lt;h2 id="账户模块">账户模块&lt;/h2>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#080;font-weight:bold">const&lt;/span> { Account } = require(&lt;span style="color:#d20;background-color:#fff0f0">&amp;#39;@chainx-v2/account&amp;#39;&lt;/span>);
&lt;span style="color:#080;font-weight:bold">const&lt;/span> account1 = Account.generate();
&lt;span style="color:#080;font-weight:bold">const&lt;/span> publicKey1 = account1.publicKey(); &lt;span style="color:#888">// 公钥
&lt;/span>&lt;span style="color:#888">&lt;/span>console.log(&lt;span style="color:#d20;background-color:#fff0f0">&amp;#39;publicKey1: &amp;#39;&lt;/span>, publicKey1);
&lt;span style="color:#080;font-weight:bold">const&lt;/span> privateKey1 = account1.privateKey(); &lt;span style="color:#888">// 私钥
&lt;/span>&lt;span style="color:#888">&lt;/span>console.log(&lt;span style="color:#d20;background-color:#fff0f0">&amp;#39;privateKey1: &amp;#39;&lt;/span>, privateKey1);
&lt;span style="color:#080;font-weight:bold">const&lt;/span> address1 = account1.address(); &lt;span style="color:#888">// 地址
&lt;/span>&lt;span style="color:#888">&lt;/span>console.log(&lt;span style="color:#d20;background-color:#fff0f0">&amp;#39;address1: &amp;#39;&lt;/span>, address1);
&lt;span style="color:#080;font-weight:bold">const&lt;/span> mnemonic = Account.newMnemonic(); &lt;span style="color:#888">// 随机助记词
&lt;/span>&lt;span style="color:#888">&lt;/span>console.log(&lt;span style="color:#d20;background-color:#fff0f0">&amp;#39;mnemonic: &amp;#39;&lt;/span>, mnemonic);
&lt;span style="color:#080;font-weight:bold">const&lt;/span> account2 = Account.from(mnemonic); &lt;span style="color:#888">// 从助记词生成账户
&lt;/span>&lt;span style="color:#888">&lt;/span>
&lt;span style="color:#080;font-weight:bold">const&lt;/span> address2 = Account.encodeAddress(account2.publicKey()); &lt;span style="color:#888">// 从公钥生成地址
&lt;/span>&lt;span style="color:#888">&lt;/span>console.log(&lt;span style="color:#d20;background-color:#fff0f0">&amp;#39;address2: &amp;#39;&lt;/span>, address2);
&lt;span style="color:#080;font-weight:bold">const&lt;/span> publicKey2 = Account.decodeAddress(address2); &lt;span style="color:#888">// 从地址获取生成公钥
&lt;/span>&lt;span style="color:#888">&lt;/span>console.log(&lt;span style="color:#d20;background-color:#fff0f0">&amp;#39;publicKey2: &amp;#39;&lt;/span>, publicKey2);
Account.setNet(&lt;span style="color:#d20;background-color:#fff0f0">&amp;#39;testnet&amp;#39;&lt;/span>); &lt;span style="color:#888">// 设置为测试网
&lt;/span>&lt;span style="color:#888">&lt;/span>&lt;span style="color:#080;font-weight:bold">const&lt;/span> address3 = Account.encodeAddress(publicKey2); &lt;span style="color:#888">// 测试网地址
&lt;/span>&lt;span style="color:#888">&lt;/span>console.log(&lt;span style="color:#d20;background-color:#fff0f0">&amp;#39;address3:&amp;#39;&lt;/span>, address3);
Account.setNet(&lt;span style="color:#d20;background-color:#fff0f0">&amp;#39;mainnet&amp;#39;&lt;/span>); &lt;span style="color:#888">// 设置为主网
&lt;/span>&lt;span style="color:#888">&lt;/span>&lt;span style="color:#080;font-weight:bold">const&lt;/span> address4 = Account.encodeAddress(publicKey2); &lt;span style="color:#888">// 主网地址
&lt;/span>&lt;span style="color:#888">&lt;/span>console.log(&lt;span style="color:#d20;background-color:#fff0f0">&amp;#39;address4:&amp;#39;&lt;/span>, address4);
&lt;span style="color:#080;font-weight:bold">const&lt;/span> account3 = Account.from(privateKey1); &lt;span style="color:#888">// 从私钥生成账户
&lt;/span>&lt;span style="color:#888">&lt;/span>console.log(&lt;span style="color:#d20;background-color:#fff0f0">&amp;#39;address:&amp;#39;&lt;/span>, account3.address()); &lt;span style="color:#888">// 地址
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="rpc">RPC&lt;/h2>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript"> &lt;span style="color:#888">//get assets
&lt;/span>&lt;span style="color:#888">&lt;/span> &lt;span style="color:#080;font-weight:bold">const&lt;/span> assets = await api.rpc.xassets.getAssets();
console.log(&lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;balance:&amp;#34;&lt;/span> + assets);
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="交易接口">交易接口&lt;/h2>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#080;font-weight:bold">const&lt;/span> ChainX = require(&lt;span style="color:#d20;background-color:#fff0f0">&amp;#39;@chinx-v2/api&amp;#39;&lt;/span>);
(async () =&amp;gt; {
&lt;span style="color:#888">// 目前只支持 websocket 链接
&lt;/span>&lt;span style="color:#888">&lt;/span> &lt;span style="color:#080;font-weight:bold">const&lt;/span> chainx = &lt;span style="color:#080;font-weight:bold">new&lt;/span> ChainX(&lt;span style="color:#d20;background-color:#fff0f0">&amp;#39;ws://47.114.131.193:9000&amp;#39;&lt;/span>);
&lt;span style="color:#888">// 等待异步的初始化
&lt;/span>&lt;span style="color:#888">&lt;/span> await chainx.ready();
&lt;span style="color:#080;font-weight:bold">const&lt;/span> api = chainx.getApi();
&lt;span style="color:#888">// 构造交易参数（同步）
&lt;/span>&lt;span style="color:#888">&lt;/span>
&lt;span style="color:#080;font-weight:bold">const&lt;/span> extrinsic = api.tx.balances.transfer(&lt;span style="color:#d20;background-color:#fff0f0">&amp;#39;5DtoAAhWgWSthkcj7JfDcF2fGKEWg91QmgMx37D6tFBAc6Qg&amp;#39;&lt;/span>, &lt;span style="color:#00d;font-weight:bold">12345&lt;/span>);
&lt;span style="color:#888">// 查看 method 哈希
&lt;/span>&lt;span style="color:#888">&lt;/span> console.log(&lt;span style="color:#d20;background-color:#fff0f0">&amp;#39;Function: &amp;#39;&lt;/span>, extrinsic.method.toHex());
&lt;span style="color:#080;font-weight:bold">const&lt;/span> alice = &lt;span style="color:#d20;background-color:#fff0f0">&amp;#39;5CtoAAhWgWSthkcj7JfDcF2fGKEWg91QmgMx37D6tFBAc6Qg&amp;#39;&lt;/span>;
&lt;span style="color:#888">// 签名并发送交易，0x0000000000000000000000000000000000000000000000000000000000000000 是用于签名的私钥
&lt;/span>&lt;span style="color:#888">&lt;/span> &lt;span style="color:#080;font-weight:bold">const&lt;/span> hash = await transfer.signAndSend(alice);
})();
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="智能合约">智能合约&lt;/h2></description></item><item><title>Docs: 节点运维</title><link>/zh/docs/developers/devops/</link><pubDate>Thu, 05 Jan 2017 00:00:00 +0000</pubDate><guid>/zh/docs/developers/devops/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>节点运维文档&lt;/p>
&lt;/div>
&lt;h2 id="信托自建比特币全节点的参考">信托自建比特币全节点的参考&lt;/h2>
&lt;p>建议信托节点使用自己搭建的比特币全节点, 推荐的机器配置不低于: CPU 2 核, 内存 4G, SSD 硬盘 500G.&lt;/p>
&lt;h3 id="下载最新版本的-bitcoin-二进制包">下载最新版本的 bitcoin 二进制包&lt;/h3>
&lt;p>直接在 &lt;a href="https://bitcoin.org/bin/">bitcoin.org&lt;/a> 下载最新版本的 bitcoin 二进制包（或者直接通过发行版的包管理器下载最新的 bitcoin 包），解压并创建软链接&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#888"># 指定下载目录&lt;/span>
$ &lt;span style="color:#038">cd&lt;/span> /opt
&lt;span style="color:#888"># 下载&lt;/span>
$ wget https://bitcoin.org/bin/bitcoin-core-0.20.1/bitcoin-0.20.1-x86_64-linux-gnu.tar.gz
&lt;span style="color:#888"># 解压&lt;/span>
$ tar zxvf bitcoin-0.20.1-x86_64-linux-gnu.tar.gz
&lt;span style="color:#888"># 建立软链接&lt;/span>
$ ln -fs /opt/bitcoin-0.20.1 /opt/bitcoin
$ ln -fs /opt/bitcoin-0.20.1/bin/bitcoind /usr/local/bin/bitcoind
$ ln -fs /opt/bitcoin-0.20.1/bin/bitcoin-cli /usr/local/bin/bitcoin-cli
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="创建指定的-data-和-wallets-目录">创建指定的 data 和 wallets 目录&lt;/h3>
&lt;p>或者使用默认路径 &lt;code>~/.bitcoin/data&lt;/code> 和 &lt;code>~/.bitcoin/wallets&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ mkdir -p /mnt/bitcoin-mainnet/data
$ mkdir -p /mnt/bitcoin-mainnet/wallets
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="创建配置文件">创建配置文件&lt;/h3>
&lt;p>或者使用默认路径 &lt;code>~/.bitcoin/bitcoin.conf&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ touch /mnt/bitcoin-mainnet/bitcoin.conf
$ vim /mnt/bitcoin-mainnet/bitcoin.conf
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-toml" data-lang="toml">&lt;span style="color:#888"># Generated by https://jlopp.github.io/bitcoin-core-config-generator/&lt;/span>
&lt;span style="color:#888"># [core]&lt;/span>
&lt;span style="color:#888"># Set database cache size in megabytes; machines sync faster with a larger cache.&lt;/span>
&lt;span style="color:#888"># Recommend setting as high as possible based upon machine&amp;#39;s available RAM.&lt;/span>
dbcache=&lt;span style="color:#00d;font-weight:bold">4096&lt;/span>
&lt;span style="color:#888"># Keep the transaction memory pool below &amp;lt;n&amp;gt; megabytes.&lt;/span>
maxmempool=&lt;span style="color:#00d;font-weight:bold">256&lt;/span>
&lt;span style="color:#888"># Do not keep transactions in the mempool longer than &amp;lt;n&amp;gt; hours.&lt;/span>
mempoolexpiry=&lt;span style="color:#00d;font-weight:bold">12&lt;/span>
&lt;span style="color:#888"># Maintain a full transaction index, used by the getrawtransaction rpc call.&lt;/span>
txindex=&lt;span style="color:#00d;font-weight:bold">1&lt;/span>
&lt;span style="color:#888"># [network]&lt;/span>
&lt;span style="color:#888"># [debug]&lt;/span>
&lt;span style="color:#888"># Enable debug logging for all categories.&lt;/span>
&lt;span style="color:#888">#debug=1&lt;/span>
&lt;span style="color:#888"># Log IP Addresses in debug output.&lt;/span>
logips=&lt;span style="color:#00d;font-weight:bold">1&lt;/span>
&lt;span style="color:#888"># Log timestamps with microsecond precision.&lt;/span>
logtimemicros=&lt;span style="color:#00d;font-weight:bold">1&lt;/span>
&lt;span style="color:#888"># [relay]&lt;/span>
&lt;span style="color:#888"># Maximum size of data in OP_RETURN outputs we relay and mine.&lt;/span>
datacarriersize=&lt;span style="color:#00d;font-weight:bold">82&lt;/span>
&lt;span style="color:#888"># Fee rates (in BTC/kB) smaller than this are considered zero fee for relaying, mining and transaction creation.&lt;/span>
minrelaytxfee=&lt;span style="color:#00d;font-weight:bold">0.000001&lt;/span>
&lt;span style="color:#888"># [mining]&lt;/span>
&lt;span style="color:#888"># Set lowest fee rate (in BTC/kB) for transactions to be included in block creation.&lt;/span>
blockmintxfee=&lt;span style="color:#00d;font-weight:bold">0.000001&lt;/span>
&lt;span style="color:#888"># [rpc]&lt;/span>
&lt;span style="color:#888"># Enable Accounts RPC&lt;/span>
deprecatedrpc=accounts
&lt;span style="color:#888"># Accept command line and JSON-RPC commands.&lt;/span>
server=&lt;span style="color:#00d;font-weight:bold">1&lt;/span>
&lt;span style="color:#888"># Accept public REST requests.&lt;/span>
rest=&lt;span style="color:#00d;font-weight:bold">1&lt;/span>
&lt;span style="color:#888"># Username and hashed password for JSON-RPC connections.&lt;/span>
&lt;span style="color:#888"># The field &amp;lt;userpw&amp;gt; comes in the format: &amp;lt;USERNAME&amp;gt;:&amp;lt;SALT&amp;gt;$&amp;lt;HASH&amp;gt;.&lt;/span>
&lt;span style="color:#888"># RPC clients connect using rpcuser=&amp;lt;USERNAME&amp;gt;/rpcpassword=&amp;lt;PASSWORD&amp;gt; arguments.&lt;/span>
&lt;span style="color:#888"># You can generate this value with the share/rpcauth/rpcauth.py script in the Bitcoin Core repository.&lt;/span>
&lt;span style="color:#888"># This option can be specified multiple times.&lt;/span>
rpcuser=远程访问的认证用户
rpcpassword=远程访问密码
&lt;span style="color:#888"># Allow JSON-RPC connections from specified source.&lt;/span>
&lt;span style="color:#888"># Valid for &amp;lt;ip&amp;gt; are a single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or a network/CIDR (e.g. 1.2.3.4/24).&lt;/span>
&lt;span style="color:#888"># This option can be specified multiple times.&lt;/span>
&lt;span style="color:#888"># 远程访问的ip或网段 建议指定ip范围，不允许陌生ip访问&lt;/span>
rpcallowip=&lt;span style="color:#00d;font-weight:bold">0.0&lt;/span>.&lt;span style="color:#00d;font-weight:bold">0.0&lt;/span>&lt;span style="color:#a61717;background-color:#e3d2d2">/&lt;/span>&lt;span style="color:#00d;font-weight:bold">0&lt;/span>
&lt;span style="color:#888"># Set the number of threads to service RPC calls&lt;/span>
rpcthreads=&lt;span style="color:#00d;font-weight:bold">16&lt;/span>
&lt;span style="color:#888"># [wallet]&lt;/span>
&lt;span style="color:#888"># [Sections]&lt;/span>
&lt;span style="color:#888"># Most options automatically apply to mainnet, testnet, and regtest networks.&lt;/span>
&lt;span style="color:#888"># If you want to confine an option to just one network, you should add it in the relevant section.&lt;/span>
&lt;span style="color:#888"># EXCEPTIONS: The options addnode, connect, port, bind, rpcport, rpcbind and wallet&lt;/span>
&lt;span style="color:#888"># only apply to mainnet unless they appear in the appropriate section below.&lt;/span>
&lt;span style="color:#888"># Options only for mainnet&lt;/span>
[main]
&lt;span style="color:#888"># [core]&lt;/span>
&lt;span style="color:#888"># Specify a non-default location to store blockchain data.&lt;/span>
blocksdir=&lt;span style="color:#a61717;background-color:#e3d2d2">/&lt;/span>mnt&lt;span style="color:#a61717;background-color:#e3d2d2">/&lt;/span>bitcoin&lt;span style="color:#a61717;background-color:#e3d2d2">-&lt;/span>mainnet&lt;span style="color:#a61717;background-color:#e3d2d2">/&lt;/span>data
&lt;span style="color:#888"># Specify a non-default location to store blockchain and other data.&lt;/span>
datadir=&lt;span style="color:#a61717;background-color:#e3d2d2">/&lt;/span>mnt&lt;span style="color:#a61717;background-color:#e3d2d2">/&lt;/span>bitcoin&lt;span style="color:#a61717;background-color:#e3d2d2">-&lt;/span>mainnet&lt;span style="color:#a61717;background-color:#e3d2d2">/&lt;/span>data
&lt;span style="color:#888"># [network]&lt;/span>
&lt;span style="color:#888"># Listen for incoming connections on non-default port.&lt;/span>
port=&lt;span style="color:#00d;font-weight:bold">8333&lt;/span>
&lt;span style="color:#888"># [debug]&lt;/span>
&lt;span style="color:#888"># Location of the debug log&lt;/span>
debuglogfile=&lt;span style="color:#a61717;background-color:#e3d2d2">/&lt;/span>mnt&lt;span style="color:#a61717;background-color:#e3d2d2">/&lt;/span>bitcoin&lt;span style="color:#a61717;background-color:#e3d2d2">-&lt;/span>mainnet&lt;span style="color:#a61717;background-color:#e3d2d2">/&lt;/span>data&lt;span style="color:#a61717;background-color:#e3d2d2">/&lt;/span>debug.log
&lt;span style="color:#888"># [rpc]&lt;/span>
&lt;span style="color:#888"># Bind to given address to listen for JSON-RPC connections.&lt;/span>
&lt;span style="color:#888"># This option is ignored unless -rpcallowip is also passed. Port is optional and overrides -rpcport. Use [host]:port notation for IPv6.&lt;/span>
&lt;span style="color:#888"># This option can be specified multiple times. (default: 127.0.0.1 and ::1 i.e., localhost, or if -rpcallowip has been specified, 0.0.0.0 and :: i.e., all addresses)&lt;/span>
rpcbind=&lt;span style="color:#00d;font-weight:bold">0.0&lt;/span>.&lt;span style="color:#00d;font-weight:bold">0.0&lt;/span>
&lt;span style="color:#888"># Listen for JSON-RPC connections on this port&lt;/span>
rpcport=&lt;span style="color:#00d;font-weight:bold">8332&lt;/span>
&lt;span style="color:#888"># [wallet]&lt;/span>
&lt;span style="color:#888"># Specify a non-default location to store wallet data.&lt;/span>
walletdir=&lt;span style="color:#a61717;background-color:#e3d2d2">/&lt;/span>mnt&lt;span style="color:#a61717;background-color:#e3d2d2">/&lt;/span>bitcoin&lt;span style="color:#a61717;background-color:#e3d2d2">-&lt;/span>mainnet&lt;span style="color:#a61717;background-color:#e3d2d2">/&lt;/span>wallets
&lt;span style="color:#888"># Options only for testnet&lt;/span>
[test]
&lt;span style="color:#888"># Options only for regtest&lt;/span>
[regtest]
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="启动和停止比特币全节点">启动和停止比特币全节点&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#888"># 启动&lt;/span>
$ bitcoind -conf=/mnt/bitcoin-mainnet/bitcoin.conf -daemon
&lt;span style="color:#888"># 停止&lt;/span>
$ bitcoin-cli -conf=/mnt/bitcoin-mainnet/bitcoin.conf stop
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="测试比特币节点-rpc-服务">测试比特币节点 rpc 服务&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ curl -s -X POST --user rpcuser:rpcpassword -H &lt;span style="color:#d20;background-color:#fff0f0">&amp;#39;content-type: text/plain;&amp;#39;&lt;/span> http://127.0.0.1:8332/ --data-binary &lt;span style="color:#d20;background-color:#fff0f0">&amp;#39;{&amp;#34;jsonrpc&amp;#34;: &amp;#34;1.0&amp;#34;, &amp;#34;id&amp;#34;:&amp;#34;curltest&amp;#34;, &amp;#34;method&amp;#34;: &amp;#34;getmininginfo&amp;#34;, &amp;#34;params&amp;#34;: [] }&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="导入信托冷热多签地址">导入信托冷热多签地址&lt;/h3>
&lt;p>往钱包导入信托冷热多签地址 每当信托换届或者信托冷热多签地址更换时，需要运维人员将更换的新地址导入到钱包，以便信托节点在使用 ChainX Wallet 构造提现交易时可以获取到该地址的 UTXO 列表。导入命令如下:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ bitcoin-cli -conf=/mnt/bitcoin-mainnet/bitcoin.conf importaddress 比特币地址 &lt;span style="color:#d20;background-color:#fff0f0">&amp;#34;&amp;#34;&lt;/span> &lt;span style="color:#038">true&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: 交易所对接</title><link>/zh/docs/developers/exchanges/</link><pubDate>Mon, 13 Jul 2020 00:00:00 +0000</pubDate><guid>/zh/docs/developers/exchanges/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>This is a placeholder page. Replace it with your own content.&lt;/p>
&lt;/div></description></item></channel></rss>